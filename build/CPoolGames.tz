{ parameter
    (or (or (or (or (or (nat %afterReward2Tez) (address %changeAdmin))
                    (or (address %changeOwner) (pair %changePoolManager nat address)))
                (or (or (pair %createPool
                           (pair %opts
                              (or %algo (or (unit %algoEqual) (unit %algoTime)) (unit %algoTimeVol))
                              (nat %gameSeconds)
                              (nat %minSeconds)
                              (nat %minDeposit)
                              (nat %maxDeposit)
                              (nat %winPercent)
                              (nat %burnPercent)
                              (nat %feePercent))
                           (pair %farm
                              (address %addr)
                              (nat %id)
                              (pair %farmToken (address %addr) (nat %token_id) (or %fa (unit %fA1_2) (unit %fA2)))
                              (pair %rewardToken
                                 (address %addr)
                                 (nat %token_id)
                                 (or %fa (unit %fA1_2) (unit %fA2)))
                              (or %interface (unit %interfaceCrunchy) (unit %interfaceQUIPU)))
                           (address %randomSource)
                           (option %burnToken
                              (pair (address %addr) (nat %token_id) (or %fa (unit %fA1_2) (unit %fA2))))
                           (option %rewardSwap address)
                           (option %burnSwap address)
                           (option %feeAddr address)
                           (or %state
                              (or (unit %poolStateActive) (unit %poolStatePause))
                              (unit %poolStateRemove)))
                        (pair %deposit nat nat))
                    (or (pair %editPool
                           nat
                           (pair (option %opts
                                    (pair (or %algo (or (unit %algoEqual) (unit %algoTime)) (unit %algoTimeVol))
                                          (nat %gameSeconds)
                                          (nat %minSeconds)
                                          (nat %minDeposit)
                                          (nat %maxDeposit)
                                          (nat %winPercent)
                                          (nat %burnPercent)
                                          (nat %feePercent)))
                                 (option %randomSource address)
                                 (option %burnToken
                                    (pair (address %addr) (nat %token_id) (or %fa (unit %fA1_2) (unit %fA2))))
                                 (option %rewardSwap address)
                                 (option %burnSwap address)
                                 (option %feeAddr address)
                                 (option %state
                                    (or (or (unit %poolStateActive) (unit %poolStatePause)) (unit %poolStateRemove)))))
                        (nat %getPoolRandom))))
            (or (or (or (nat %onBalanseFA1_2)
                        (list %onBalanseFA2
                           (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))
                    (or (pair %onRandom nat nat) (nat %pausePool)))
                (or (or (nat %removePool) (nat %setPoolGameComplete))
                    (or (pair %setPoolWinner nat address) (nat %startPool)))))
        (or (pair %withdraw nat nat) (nat %withdrawAll))) ;
  storage
    (pair (address %owner)
          (address %admin)
          (nat %inext)
          (big_map %pools
             nat
             (pair (pair %opts
                      (or %algo (or (unit %algoEqual) (unit %algoTime)) (unit %algoTimeVol))
                      (nat %gameSeconds)
                      (nat %minSeconds)
                      (nat %minDeposit)
                      (nat %maxDeposit)
                      (nat %winPercent)
                      (nat %burnPercent)
                      (nat %feePercent))
                   (pair %farm
                      (address %addr)
                      (nat %id)
                      (pair %farmToken (address %addr) (nat %token_id) (or %fa (unit %fA1_2) (unit %fA2)))
                      (pair %rewardToken
                         (address %addr)
                         (nat %token_id)
                         (or %fa (unit %fA1_2) (unit %fA2)))
                      (or %interface (unit %interfaceCrunchy) (unit %interfaceQUIPU)))
                   (address %randomSource)
                   (option %burnToken
                      (pair (address %addr) (nat %token_id) (or %fa (unit %fA1_2) (unit %fA2))))
                   (option %rewardSwap address)
                   (option %burnSwap address)
                   (option %feeAddr address)
                   (or %state
                      (or (unit %poolStateActive) (unit %poolStatePause))
                      (unit %poolStateRemove))
                   (nat %balance)
                   (nat %count)
                   (pair %game
                      (or %state
                         (or (or (unit %gameStateActivating) (unit %gameStateActive))
                             (or (unit %gameStateComplete) (unit %gameStatePause)))
                         (or (unit %gameStateWaitRandom) (unit %gameStateWaitWinner)))
                      (timestamp %tsBeg)
                      (timestamp %tsEnd)
                      (nat %weight)
                      (nat %winWeight)
                      (address %winner))
                   (bool %randomFuture)
                   (nat %beforeHarvestBalance)
                   (mutez %beforeReward2TezBalance)
                   (nat %beforeBurnBalance)
                   (address %manager)))
          (big_map %users
             (pair nat address)
             (pair (timestamp %tsPool) (nat %balance) (timestamp %tsBalance) (nat %addWeight)))
          (int %waitBalanceBeforeHarvest)
          (int %waitBalanceAfterHarvest)
          (int %waitBalanceBeforeTez2Burn)
          (int %waitBalanceAfterTez2Burn)
          (big_map %usedFarms (pair address nat) unit)
          (big_map %approved
             (pair address (pair (address %addr) (nat %token_id) (or %fa (unit %fA1_2) (unit %fA2))))
             unit)) ;
  code { PUSH nat 60 ;
         PUSH nat 10 ;
         MUL ;
         PUSH nat 86400 ;
         PUSH nat 10 ;
         MUL ;
         PUSH address "tz1ZZZZZZZZZZZZZZZZZZZZZZZZZZZZNkiRg" ;
         LAMBDA
           address
           (contract (pair address address nat))
           { CONTRACT %transfer (pair (address %src) (address %dst) (nat %tamount)) ;
             IF_NONE { PUSH string "MFA1_2/NotFoundTransfer" ; FAILWITH } {} } ;
         DUP ;
         LAMBDA
           (pair (lambda address (contract (pair address address nat)))
                 (pair (pair address address) (pair address nat)))
           operation
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 2 ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             PUSH mutez 0 ;
             DIG 3 ;
             DIG 3 ;
             DIG 4 ;
             PAIR 3 ;
             TRANSFER_TOKENS } ;
         SWAP ;
         APPLY ;
         LAMBDA
           address
           (contract (pair address (contract nat)))
           { CONTRACT %getBalance (pair (address %owner) (contract %callback nat)) ;
             IF_NONE { PUSH string "MFA1_2/NotFoundBalance" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair address nat))
           { CONTRACT %approve (pair (address %spender) (nat %value)) ;
             IF_NONE { PUSH string "MFA1_2/NotFoundApprove" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (list (pair address (list (pair address nat nat)))))
           { CONTRACT %transfer
               (list (pair (address %src)
                           (list %transer_dsts (pair (address %dst) (nat %token_id) (nat %tamount))))) ;
             IF_NONE { PUSH string "MFA2/NotFoundTransfer" ; FAILWITH } {} } ;
         DUP ;
         LAMBDA
           (pair (lambda address (contract (list (pair address (list (pair address nat nat))))))
                 (pair (pair (pair address nat) (pair address address)) nat))
           operation
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 2 ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             PUSH mutez 0 ;
             DIG 5 ;
             DIG 4 ;
             PAIR ;
             DIG 3 ;
             DIG 4 ;
             DIG 2 ;
             UNPAIR ;
             NIL (pair address (list (pair address nat nat))) ;
             NIL (pair address nat nat) ;
             DIG 3 ;
             DIG 4 ;
             DIG 4 ;
             PAIR 3 ;
             CONS ;
             DIG 2 ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         SWAP ;
         APPLY ;
         LAMBDA
           address
           (contract (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))))
           { CONTRACT %balance_of
               (pair (list %requests (pair (address %owner) (nat %token_id)))
                     (contract %callback
                        (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) ;
             IF_NONE { PUSH string "MFA2/NotFoundBalanceOf" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (list (or (pair address address nat) (pair address address nat))))
           { CONTRACT %update_operators
               (list (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                         (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))) ;
             IF_NONE { PUSH string "MFA2/NotFoundUpdateOperators" ; FAILWITH } {} } ;
         DIG 7 ;
         DUP 7 ;
         DUP 7 ;
         DIG 6 ;
         DUP 6 ;
         DUP 6 ;
         PAIR 6 ;
         LAMBDA
           (pair (pair (lambda
                          address
                          (contract (list (or (pair address address nat) (pair address address nat)))))
                       (pair (lambda
                                address
                                (contract (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat))))))
                             (pair (lambda address (contract (list (pair address (list (pair address nat nat))))))
                                   (pair (lambda address (contract (pair address nat)))
                                         (pair (lambda address (contract (pair address (contract nat))))
                                               (lambda address (contract (pair address address nat))))))))
                 (pair address nat (or unit unit)))
           unit
           { UNPAIR ;
             UNPAIR 6 ;
             DIG 6 ;
             DUP ;
             GET 4 ;
             IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DROP 4 ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 EXEC ;
                 DROP ;
                 UNIT }
               { DIG 5 ;
                 DIG 6 ;
                 DIG 7 ;
                 DROP 4 ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 EXEC ;
                 DROP ;
                 UNIT } ;
             DROP ;
             UNIT } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair address nat (or unit unit)) (pair address nat (or unit unit)))
           bool
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             COMPARE ;
             EQ ;
             DUP 3 ;
             GET 3 ;
             DUP 3 ;
             GET 3 ;
             COMPARE ;
             EQ ;
             DIG 3 ;
             CAR ;
             DIG 3 ;
             CAR ;
             COMPARE ;
             EQ ;
             AND ;
             AND } ;
         DUP 8 ;
         DUP 6 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda (pair (pair (pair address nat) (pair address address)) nat) operation)
                       (lambda (pair (pair address address) (pair address nat)) operation))
                 (pair (pair (pair address nat (or unit unit)) address) (pair address nat)))
           operation
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUP 3 ;
             GET 4 ;
             IF_LEFT
               { DIG 5 ; DROP 2 ; PAIR ; DUG 2 ; CAR ; PAIR ; PAIR ; EXEC }
               { DIG 6 ;
                 DROP 2 ;
                 DIG 3 ;
                 PAIR ;
                 DUP 3 ;
                 GET 3 ;
                 DIG 3 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 EXEC } } ;
         SWAP ;
         APPLY ;
         DIG 7 ;
         DIG 5 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda
                          address
                          (contract (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat))))))
                       (lambda address (contract (pair address (contract nat)))))
                 (pair (pair (pair address nat (or unit unit)) address)
                       (pair (contract nat) (contract (list (pair (pair address nat) nat))))))
           operation
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUP 3 ;
             GET 4 ;
             IF_LEFT
               { DIG 2 ;
                 DIG 5 ;
                 DROP 3 ;
                 DUG 2 ;
                 CAR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DIG 3 ;
                 PAIR ;
                 TRANSFER_TOKENS }
               { SWAP ;
                 DIG 6 ;
                 DROP 3 ;
                 DIG 2 ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 DIG 2 ;
                 CAR ;
                 DIG 2 ;
                 UNPAIR ;
                 DIG 2 ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 2 ;
                 NIL (pair address nat) ;
                 DIG 2 ;
                 DIG 3 ;
                 PAIR ;
                 CONS ;
                 PAIR ;
                 TRANSFER_TOKENS } } ;
         SWAP ;
         APPLY ;
         DUP 9 ;
         DIG 8 ;
         DIG 7 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair (lambda (pair (pair (pair address nat) (pair address address)) nat) operation)
                       (pair (lambda (pair (pair address address) (pair address nat)) operation) address))
                 (pair (pair (pair address nat (or unit unit)) address) nat))
           operation
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR ;
             UNPAIR ;
             DUP ;
             GET 4 ;
             IF_LEFT
               { DIG 4 ; DROP 2 ; DIG 2 ; DIG 4 ; PAIR ; DUG 2 ; CAR ; PAIR ; PAIR ; EXEC }
               { DIG 5 ;
                 DROP 2 ;
                 DIG 2 ;
                 DIG 4 ;
                 DIG 3 ;
                 PAIR ;
                 DUP 3 ;
                 GET 3 ;
                 DIG 3 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 EXEC } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           address
           (contract (pair nat nat))
           { CONTRACT %deposit (pair (nat %farm_id) (nat %damount)) ;
             IF_NONE { PUSH string "MFarmCrunchy/NotFoundDeposit" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair nat nat))
           { CONTRACT %withdraw (pair (nat %farm_id) (nat %wamount)) ;
             IF_NONE { PUSH string "MFarmCrunchy/NotFoundWithdraw" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract nat)
           { CONTRACT %harvest nat ;
             IF_NONE { PUSH string "MFarmCrunchy/NotFoundHarvest" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair nat nat (option address) address key_hash))
           { CONTRACT %deposit
               (pair (nat %fid)
                     (nat %amt)
                     (option %referrer address)
                     (address %rewards_receiver)
                     (key_hash %candidate)) ;
             IF_NONE { PUSH string "MFarmQUIPU/NotFoundDeposit" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair nat nat address address))
           { CONTRACT %withdraw
               (pair (nat %fid) (nat %amt) (address %receiver) (address %rewards_receiver)) ;
             IF_NONE { PUSH string "MFarmQUIPU/NotFoundWithdraw" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair nat address))
           { CONTRACT %harvest (pair (nat %fid) (address %rewards_receiver)) ;
             IF_NONE { PUSH string "MFarmQUIPU/NotFoundHarvest" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair timestamp nat))
           { CONTRACT %createFuture (pair timestamp nat) ;
             IF_NONE { PUSH string "MRandom/NotFoundCreateFuture" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair (pair timestamp nat) (contract (pair nat nat))))
           { CONTRACT %getFuture (pair (pair timestamp nat) (contract (pair nat nat))) ;
             IF_NONE { PUSH string "MRandom/NotFoundGetFuture" ; FAILWITH } {} } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda address (contract (pair (pair timestamp nat) (contract (pair nat nat)))))
                       (lambda address (contract (pair timestamp nat))))
                 address)
           unit
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             DUP ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP ;
             CONTRACT %deleteFuture (pair timestamp nat) ;
             IF_NONE { PUSH string "MRandom/NotFoundDeleteFuture" ; FAILWITH } { DROP } ;
             EXEC ;
             DROP ;
             UNIT } ;
         SWAP ;
         APPLY ;
         LAMBDA
           address
           (contract (pair nat address))
           { CONTRACT %tezToTokenPayment (pair nat address) ;
             IF_NONE { PUSH string "MRandom/NotFoundTez2Token" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair (pair nat nat) address))
           { CONTRACT %tokenToTezPayment (pair (pair nat nat) address) ;
             IF_NONE { PUSH string "MRandom/NotFoundToken2Tez" ; FAILWITH } {} } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda address (contract (pair (pair nat nat) address)))
                       (lambda address (contract (pair nat address))))
                 address)
           unit
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             DUP ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             EXEC ;
             DROP ;
             UNIT } ;
         SWAP ;
         APPLY ;
         PUSH string "MPoolOpts/InvalidSeconds" ;
         DIG 22 ;
         DIG 22 ;
         DIG 2 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair string (pair nat nat))
                 (pair (or (or unit unit) unit) nat nat nat nat nat nat nat))
           unit
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             DIG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             COMPARE ;
             LT ;
             IF { DIG 2 ; DROP ; SWAP ; FAILWITH }
                { DIG 2 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  GET 3 ;
                  COMPARE ;
                  GT ;
                  IF { SWAP ; FAILWITH } { SWAP ; DROP } } ;
             DUP ;
             GET 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 5 ;
             COMPARE ;
             GT ;
             IF { PUSH string "MPoolOpts/InvalidMinSeconds" ; FAILWITH } {} ;
             DUP ;
             GET 9 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 7 ;
             COMPARE ;
             GT ;
             PUSH nat 0 ;
             DUP 3 ;
             GET 9 ;
             COMPARE ;
             GT ;
             AND ;
             IF { PUSH string "MPoolOpts/InvalidMaxDeposit" ; FAILWITH } {} ;
             DUP ;
             GET 14 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 13 ;
             DUP 3 ;
             GET 11 ;
             ADD ;
             ADD ;
             PUSH nat 100 ;
             COMPARE ;
             NEQ ;
             SWAP ;
             GET 11 ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { PUSH string "MPoolOpts/InvalidPercent" ; FAILWITH } {} ;
             UNIT } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                 (pair address
                       nat
                       (pair address nat (or unit unit))
                       (pair address nat (or unit unit))
                       (or unit unit))
                 address
                 (option (pair address nat (or unit unit)))
                 (option address)
                 (option address)
                 (option address)
                 (or (or unit unit) unit)
                 nat
                 nat
                 (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                       timestamp
                       timestamp
                       nat
                       nat
                       address)
                 bool
                 nat
                 mutez
                 nat
                 address)
           (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                 (pair address
                       nat
                       (pair address nat (or unit unit))
                       (pair address nat (or unit unit))
                       (or unit unit))
                 address
                 (option (pair address nat (or unit unit)))
                 (option address)
                 (option address)
                 (option address)
                 (or (or unit unit) unit)
                 nat
                 nat
                 (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                       timestamp
                       timestamp
                       nat
                       nat
                       address)
                 bool
                 nat
                 mutez
                 nat
                 address)
           { DUP ;
             GET 21 ;
             GET 5 ;
             NOW ;
             COMPARE ;
             GE ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 21 ;
             CAR ;
             UNIT ;
             RIGHT unit ;
             LEFT (or unit unit) ;
             LEFT (or unit unit) ;
             COMPARE ;
             EQ ;
             AND ;
             IF { PUSH nat 0 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  GET 21 ;
                  GET 7 ;
                  COMPARE ;
                  GT ;
                  IF { DUP ;
                       GET 23 ;
                       IF { DUP ;
                            GET 21 ;
                            UNIT ;
                            LEFT unit ;
                            RIGHT (or unit unit) ;
                            LEFT (or unit unit) ;
                            UPDATE 1 ;
                            UPDATE 21 }
                          { DUP ;
                            DUP ;
                            DUG 2 ;
                            GET 21 ;
                            DIG 2 ;
                            GET 21 ;
                            GET 7 ;
                            UPDATE 9 ;
                            UPDATE 21 ;
                            DUP ;
                            GET 21 ;
                            UNIT ;
                            RIGHT unit ;
                            RIGHT (or (or unit unit) (or unit unit)) ;
                            UPDATE 1 ;
                            UPDATE 21 } }
                     { DUP ;
                       GET 15 ;
                       UNIT ;
                       LEFT unit ;
                       LEFT unit ;
                       COMPARE ;
                       EQ ;
                       IF { DUP ;
                            GET 21 ;
                            UNIT ;
                            LEFT unit ;
                            LEFT (or unit unit) ;
                            LEFT (or unit unit) ;
                            UPDATE 1 ;
                            UPDATE 21 }
                          { DUP ;
                            GET 21 ;
                            UNIT ;
                            RIGHT unit ;
                            RIGHT (or unit unit) ;
                            LEFT (or unit unit) ;
                            UPDATE 1 ;
                            UPDATE 21 } } }
                {} } ;
         PUSH string "MCallback/Fail" ;
         DUP ;
         LAMBDA
           (pair string unit)
           (contract nat)
           { CAR ;
             SELF_ADDRESS ;
             CONTRACT %onBalanceFA1_2 nat ;
             IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         SWAP ;
         APPLY ;
         SWAP ;
         DUP ;
         DUG 2 ;
         LAMBDA
           (pair string unit)
           (contract (list (pair (pair address nat) nat)))
           { CAR ;
             SELF_ADDRESS ;
             CONTRACT %onBalanceFA2
               (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) ;
             IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         SWAP ;
         APPLY ;
         PUSH string "MPool/InvalidState" ;
         PUSH string "MPool/Logic" ;
         PUSH string "MPool/Denied" ;
         LAMBDA
           (pair (pair address
                       address
                       nat
                       (big_map
                          nat
                          (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                (pair address
                                      nat
                                      (pair address nat (or unit unit))
                                      (pair address nat (or unit unit))
                                      (or unit unit))
                                address
                                (option (pair address nat (or unit unit)))
                                (option address)
                                (option address)
                                (option address)
                                (or (or unit unit) unit)
                                nat
                                nat
                                (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                      timestamp
                                      timestamp
                                      nat
                                      nat
                                      address)
                                bool
                                nat
                                mutez
                                nat
                                address))
                       (big_map (pair nat address) (pair timestamp nat timestamp nat))
                       int
                       int
                       int
                       int
                       (big_map (pair address nat) unit)
                       (big_map (pair address (pair address nat (or unit unit))) unit))
                 (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                       (pair address
                             nat
                             (pair address nat (or unit unit))
                             (pair address nat (or unit unit))
                             (or unit unit))
                       address
                       (option (pair address nat (or unit unit)))
                       (option address)
                       (option address)
                       (option address)
                       (or (or unit unit) unit)
                       nat
                       nat
                       (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                             timestamp
                             timestamp
                             nat
                             nat
                             address)
                       bool
                       nat
                       mutez
                       nat
                       address))
           unit
           { CDR ;
             SENDER ;
             SWAP ;
             GET 30 ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "MManager/Denied" ; FAILWITH } ;
             UNIT } ;
         DUP 26 ;
         DUP 26 ;
         DIG 11 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair (lambda address unit)
                       (pair (lambda (pair (pair address nat (or unit unit)) (pair address nat (or unit unit))) bool)
                             (lambda (pair address nat (or unit unit)) unit)))
                 (pair (pair (pair address nat (or unit unit)) (option (pair address nat (or unit unit))))
                       (pair (option address) (option address))))
           unit
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 3 ;
             IF_NONE
               { DROP 6 ; PUSH string "MPool/MustBurnToken" ; FAILWITH }
               { DUP ;
                 DIG 7 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DIG 3 ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 IF { DROP 3 ; UNIT }
                    { IF_NONE
                        { PUSH string "MPool/MustRewardSwap" ; FAILWITH }
                        { DUP 3 ; SWAP ; EXEC ; DROP } ;
                      IF_NONE { DROP ; PUSH string "MPool/MustBurnSwap" ; FAILWITH } { EXEC } } ;
                 DROP } ;
             UNIT } ;
         SWAP ;
         APPLY ;
         DUP 4 ;
         LAMBDA
           (pair string
                 (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                       (pair address
                             nat
                             (pair address nat (or unit unit))
                             (pair address nat (or unit unit))
                             (or unit unit))
                       address
                       (option (pair address nat (or unit unit)))
                       (option address)
                       (option address)
                       (option address)
                       (or (or unit unit) unit)
                       nat
                       nat
                       (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                             timestamp
                             timestamp
                             nat
                             nat
                             address)
                       bool
                       nat
                       mutez
                       nat
                       address))
           (pair address nat (or unit unit))
           { UNPAIR ; SWAP ; GET 7 ; IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         SWAP ;
         APPLY ;
         DIG 15 ;
         LAMBDA
           (pair (lambda address (contract (pair timestamp nat)))
                 (pair (pair nat
                             (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                   (pair address
                                         nat
                                         (pair address nat (or unit unit))
                                         (pair address nat (or unit unit))
                                         (or unit unit))
                                   address
                                   (option (pair address nat (or unit unit)))
                                   (option address)
                                   (option address)
                                   (option address)
                                   (or (or unit unit) unit)
                                   nat
                                   nat
                                   (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                         timestamp
                                         timestamp
                                         nat
                                         nat
                                         address)
                                   bool
                                   nat
                                   mutez
                                   nat
                                   address))
                       (list operation)))
           (pair (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                       (pair address
                             nat
                             (pair address nat (or unit unit))
                             (pair address nat (or unit unit))
                             (or unit unit))
                       address
                       (option (pair address nat (or unit unit)))
                       (option address)
                       (option address)
                       (option address)
                       (or (or unit unit) unit)
                       nat
                       nat
                       (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                             timestamp
                             timestamp
                             nat
                             nat
                             address)
                       bool
                       nat
                       mutez
                       nat
                       address)
                 (list operation))
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 23 ;
             NOT ;
             PUSH nat 1 ;
             DUP 4 ;
             GET 19 ;
             COMPARE ;
             GT ;
             DUP 4 ;
             GET 21 ;
             CAR ;
             UNIT ;
             RIGHT unit ;
             LEFT (or unit unit) ;
             LEFT (or unit unit) ;
             COMPARE ;
             EQ ;
             AND ;
             AND ;
             IF { DIG 2 ;
                  SWAP ;
                  DUP 3 ;
                  GET 21 ;
                  GET 5 ;
                  DUP 4 ;
                  GET 5 ;
                  DIG 5 ;
                  SWAP ;
                  EXEC ;
                  PUSH mutez 0 ;
                  DIG 3 ;
                  DIG 3 ;
                  PAIR ;
                  TRANSFER_TOKENS ;
                  CONS ;
                  SWAP ;
                  PUSH bool True ;
                  UPDATE 23 ;
                  SWAP ;
                  PAIR }
                { DIG 3 ; DROP 2 ; SWAP ; PAIR } ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DUP ;
         LAMBDA
           (pair (lambda
                    (pair (pair nat
                                (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                      (pair address
                                            nat
                                            (pair address nat (or unit unit))
                                            (pair address nat (or unit unit))
                                            (or unit unit))
                                      address
                                      (option (pair address nat (or unit unit)))
                                      (option address)
                                      (option address)
                                      (option address)
                                      (or (or unit unit) unit)
                                      nat
                                      nat
                                      (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                            timestamp
                                            timestamp
                                            nat
                                            nat
                                            address)
                                      bool
                                      nat
                                      mutez
                                      nat
                                      address))
                          (list operation))
                    (pair (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                (pair address
                                      nat
                                      (pair address nat (or unit unit))
                                      (pair address nat (or unit unit))
                                      (or unit unit))
                                address
                                (option (pair address nat (or unit unit)))
                                (option address)
                                (option address)
                                (option address)
                                (or (or unit unit) unit)
                                nat
                                nat
                                (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                      timestamp
                                      timestamp
                                      nat
                                      nat
                                      address)
                                bool
                                nat
                                mutez
                                nat
                                address)
                          (list operation)))
                 (pair (pair nat
                             (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                   (pair address
                                         nat
                                         (pair address nat (or unit unit))
                                         (pair address nat (or unit unit))
                                         (or unit unit))
                                   address
                                   (option (pair address nat (or unit unit)))
                                   (option address)
                                   (option address)
                                   (option address)
                                   (or (or unit unit) unit)
                                   nat
                                   nat
                                   (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                         timestamp
                                         timestamp
                                         nat
                                         nat
                                         address)
                                   bool
                                   nat
                                   mutez
                                   nat
                                   address))
                       (list operation)))
           (pair (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                       (pair address
                             nat
                             (pair address nat (or unit unit))
                             (pair address nat (or unit unit))
                             (or unit unit))
                       address
                       (option (pair address nat (or unit unit)))
                       (option address)
                       (option address)
                       (option address)
                       (or (or unit unit) unit)
                       nat
                       nat
                       (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                             timestamp
                             timestamp
                             nat
                             nat
                             address)
                       bool
                       nat
                       mutez
                       nat
                       address)
                 (list operation))
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             DUP ;
             GET 21 ;
             UNIT ;
             RIGHT unit ;
             LEFT (or unit unit) ;
             LEFT (or unit unit) ;
             UPDATE 1 ;
             UPDATE 21 ;
             DUP ;
             GET 21 ;
             NOW ;
             UPDATE 3 ;
             UPDATE 21 ;
             DUP ;
             CAR ;
             GET 3 ;
             SWAP ;
             DUP ;
             GET 21 ;
             DUP 3 ;
             INT ;
             NOW ;
             ADD ;
             UPDATE 5 ;
             UPDATE 21 ;
             DUP ;
             CAR ;
             CAR ;
             IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP 2 ;
                     DUP ;
                     DUP ;
                     DUG 2 ;
                     GET 21 ;
                     DIG 2 ;
                     GET 19 ;
                     UPDATE 7 ;
                     UPDATE 21 }
                   { DROP ;
                     DUP ;
                     DUP ;
                     DUG 2 ;
                     GET 21 ;
                     DIG 3 ;
                     DIG 3 ;
                     GET 19 ;
                     MUL ;
                     UPDATE 7 ;
                     UPDATE 21 } }
               { DROP ;
                 DUP ;
                 DUP ;
                 DUG 2 ;
                 GET 21 ;
                 DIG 3 ;
                 DIG 3 ;
                 GET 17 ;
                 MUL ;
                 UPDATE 7 ;
                 UPDATE 21 } ;
             DIG 2 ;
             SWAP ;
             PUSH bool False ;
             UPDATE 23 ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             EXEC } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair address
                       address
                       nat
                       (big_map
                          nat
                          (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                (pair address
                                      nat
                                      (pair address nat (or unit unit))
                                      (pair address nat (or unit unit))
                                      (or unit unit))
                                address
                                (option (pair address nat (or unit unit)))
                                (option address)
                                (option address)
                                (option address)
                                (or (or unit unit) unit)
                                nat
                                nat
                                (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                      timestamp
                                      timestamp
                                      nat
                                      nat
                                      address)
                                bool
                                nat
                                mutez
                                nat
                                address))
                       (big_map (pair nat address) (pair timestamp nat timestamp nat))
                       int
                       int
                       int
                       int
                       (big_map (pair address nat) unit)
                       (big_map (pair address (pair address nat (or unit unit))) unit))
                 nat)
           (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                 (pair address
                       nat
                       (pair address nat (or unit unit))
                       (pair address nat (or unit unit))
                       (or unit unit))
                 address
                 (option (pair address nat (or unit unit)))
                 (option address)
                 (option address)
                 (option address)
                 (or (or unit unit) unit)
                 nat
                 nat
                 (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                       timestamp
                       timestamp
                       nat
                       nat
                       address)
                 bool
                 nat
                 mutez
                 nat
                 address)
           { UNPAIR ;
             GET 7 ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "MPools/NotFound" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair address
                       address
                       nat
                       (big_map
                          nat
                          (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                (pair address
                                      nat
                                      (pair address nat (or unit unit))
                                      (pair address nat (or unit unit))
                                      (or unit unit))
                                address
                                (option (pair address nat (or unit unit)))
                                (option address)
                                (option address)
                                (option address)
                                (or (or unit unit) unit)
                                nat
                                nat
                                (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                      timestamp
                                      timestamp
                                      nat
                                      nat
                                      address)
                                bool
                                nat
                                mutez
                                nat
                                address))
                       (big_map (pair nat address) (pair timestamp nat timestamp nat))
                       int
                       int
                       int
                       int
                       (big_map (pair address nat) unit)
                       (big_map (pair address (pair address nat (or unit unit))) unit))
                 nat)
           (pair timestamp nat timestamp nat)
           { UNPAIR ;
             GET 9 ;
             SENDER ;
             DIG 2 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH nat 0 ; NOW ; PUSH nat 0 ; NOW ; PAIR 4 } {} } ;
         LAMBDA
           (pair (pair (pair address
                             address
                             nat
                             (big_map
                                nat
                                (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                      (pair address
                                            nat
                                            (pair address nat (or unit unit))
                                            (pair address nat (or unit unit))
                                            (or unit unit))
                                      address
                                      (option (pair address nat (or unit unit)))
                                      (option address)
                                      (option address)
                                      (option address)
                                      (or (or unit unit) unit)
                                      nat
                                      nat
                                      (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                            timestamp
                                            timestamp
                                            nat
                                            nat
                                            address)
                                      bool
                                      nat
                                      mutez
                                      nat
                                      address))
                             (big_map (pair nat address) (pair timestamp nat timestamp nat))
                             int
                             int
                             int
                             int
                             (big_map (pair address nat) unit)
                             (big_map (pair address (pair address nat (or unit unit))) unit))
                       nat)
                 (pair timestamp nat timestamp nat))
           (pair address
                 address
                 nat
                 (big_map
                    nat
                    (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                          (pair address
                                nat
                                (pair address nat (or unit unit))
                                (pair address nat (or unit unit))
                                (or unit unit))
                          address
                          (option (pair address nat (or unit unit)))
                          (option address)
                          (option address)
                          (option address)
                          (or (or unit unit) unit)
                          nat
                          nat
                          (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                timestamp
                                timestamp
                                nat
                                nat
                                address)
                          bool
                          nat
                          mutez
                          nat
                          address))
                 (big_map (pair nat address) (pair timestamp nat timestamp nat))
                 int
                 int
                 int
                 int
                 (big_map (pair address nat) unit)
                 (big_map (pair address (pair address nat (or unit unit))) unit))
           { UNPAIR ;
             UNPAIR ;
             SENDER ;
             DIG 2 ;
             PAIR ;
             PUSH nat 0 ;
             DUP 4 ;
             GET 3 ;
             COMPARE ;
             GT ;
             IF { SWAP ;
                  DUP ;
                  GET 9 ;
                  DIG 3 ;
                  DIG 3 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  UPDATE 9 }
                { DIG 2 ;
                  DROP ;
                  SWAP ;
                  DUP ;
                  GET 9 ;
                  DIG 2 ;
                  NONE (pair timestamp nat timestamp nat) ;
                  SWAP ;
                  UPDATE ;
                  UPDATE 9 } } ;
         DUP 8 ;
         DUP 4 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair address
                                      address
                                      nat
                                      (big_map
                                         nat
                                         (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                               (pair address
                                                     nat
                                                     (pair address nat (or unit unit))
                                                     (pair address nat (or unit unit))
                                                     (or unit unit))
                                               address
                                               (option (pair address nat (or unit unit)))
                                               (option address)
                                               (option address)
                                               (option address)
                                               (or (or unit unit) unit)
                                               nat
                                               nat
                                               (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                     timestamp
                                                     timestamp
                                                     nat
                                                     nat
                                                     address)
                                               bool
                                               nat
                                               mutez
                                               nat
                                               address))
                                      (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                      int
                                      int
                                      int
                                      int
                                      (big_map (pair address nat) unit)
                                      (big_map (pair address (pair address nat (or unit unit))) unit))
                                nat)
                          (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                (pair address
                                      nat
                                      (pair address nat (or unit unit))
                                      (pair address nat (or unit unit))
                                      (or unit unit))
                                address
                                (option (pair address nat (or unit unit)))
                                (option address)
                                (option address)
                                (option address)
                                (or (or unit unit) unit)
                                nat
                                nat
                                (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                      timestamp
                                      timestamp
                                      nat
                                      nat
                                      address)
                                bool
                                nat
                                mutez
                                nat
                                address))
                       (lambda
                          (pair (pair address
                                      address
                                      nat
                                      (big_map
                                         nat
                                         (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                               (pair address
                                                     nat
                                                     (pair address nat (or unit unit))
                                                     (pair address nat (or unit unit))
                                                     (or unit unit))
                                               address
                                               (option (pair address nat (or unit unit)))
                                               (option address)
                                               (option address)
                                               (option address)
                                               (or (or unit unit) unit)
                                               nat
                                               nat
                                               (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                     timestamp
                                                     timestamp
                                                     nat
                                                     nat
                                                     address)
                                               bool
                                               nat
                                               mutez
                                               nat
                                               address))
                                      (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                      int
                                      int
                                      int
                                      int
                                      (big_map (pair address nat) unit)
                                      (big_map (pair address (pair address nat (or unit unit))) unit))
                                (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                      (pair address
                                            nat
                                            (pair address nat (or unit unit))
                                            (pair address nat (or unit unit))
                                            (or unit unit))
                                      address
                                      (option (pair address nat (or unit unit)))
                                      (option address)
                                      (option address)
                                      (option address)
                                      (or (or unit unit) unit)
                                      nat
                                      nat
                                      (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                            timestamp
                                            timestamp
                                            nat
                                            nat
                                            address)
                                      bool
                                      nat
                                      mutez
                                      nat
                                      address))
                          unit))
                 (pair (pair (pair address
                                   address
                                   nat
                                   (big_map
                                      nat
                                      (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                            (pair address
                                                  nat
                                                  (pair address nat (or unit unit))
                                                  (pair address nat (or unit unit))
                                                  (or unit unit))
                                            address
                                            (option (pair address nat (or unit unit)))
                                            (option address)
                                            (option address)
                                            (option address)
                                            (or (or unit unit) unit)
                                            nat
                                            nat
                                            (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                  timestamp
                                                  timestamp
                                                  nat
                                                  nat
                                                  address)
                                            bool
                                            nat
                                            mutez
                                            nat
                                            address))
                                   (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                   int
                                   int
                                   int
                                   int
                                   (big_map (pair address nat) unit)
                                   (big_map (pair address (pair address nat (or unit unit))) unit))
                             nat)
                       (or (or unit unit) unit)))
           (pair address
                 address
                 nat
                 (big_map
                    nat
                    (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                          (pair address
                                nat
                                (pair address nat (or unit unit))
                                (pair address nat (or unit unit))
                                (or unit unit))
                          address
                          (option (pair address nat (or unit unit)))
                          (option address)
                          (option address)
                          (option address)
                          (or (or unit unit) unit)
                          nat
                          nat
                          (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                timestamp
                                timestamp
                                nat
                                nat
                                address)
                          bool
                          nat
                          mutez
                          nat
                          address))
                 (big_map (pair nat address) (pair timestamp nat timestamp nat))
                 int
                 int
                 int
                 int
                 (big_map (pair address nat) unit)
                 (big_map (pair address (pair address nat (or unit unit))) unit))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP ;
             DUP 3 ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DROP ;
             DIG 3 ;
             UPDATE 15 ;
             DUG 2 ;
             DUP ;
             GET 7 ;
             DIG 3 ;
             DIG 3 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             UPDATE 7 } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair (pair address
                             address
                             nat
                             (big_map
                                nat
                                (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                      (pair address
                                            nat
                                            (pair address nat (or unit unit))
                                            (pair address nat (or unit unit))
                                            (or unit unit))
                                      address
                                      (option (pair address nat (or unit unit)))
                                      (option address)
                                      (option address)
                                      (option address)
                                      (or (or unit unit) unit)
                                      nat
                                      nat
                                      (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                            timestamp
                                            timestamp
                                            nat
                                            nat
                                            address)
                                      bool
                                      nat
                                      mutez
                                      nat
                                      address))
                             (big_map (pair nat address) (pair timestamp nat timestamp nat))
                             int
                             int
                             int
                             int
                             (big_map (pair address nat) unit)
                             (big_map (pair address (pair address nat (or unit unit))) unit))
                       nat)
                 (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                       (pair address
                             nat
                             (pair address nat (or unit unit))
                             (pair address nat (or unit unit))
                             (or unit unit))
                       address
                       (option (pair address nat (or unit unit)))
                       (option address)
                       (option address)
                       (option address)
                       (or (or unit unit) unit)
                       nat
                       nat
                       (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                             timestamp
                             timestamp
                             nat
                             nat
                             address)
                       bool
                       nat
                       mutez
                       nat
                       address))
           (pair address
                 address
                 nat
                 (big_map
                    nat
                    (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                          (pair address
                                nat
                                (pair address nat (or unit unit))
                                (pair address nat (or unit unit))
                                (or unit unit))
                          address
                          (option (pair address nat (or unit unit)))
                          (option address)
                          (option address)
                          (option address)
                          (or (or unit unit) unit)
                          nat
                          nat
                          (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                timestamp
                                timestamp
                                nat
                                nat
                                address)
                          bool
                          nat
                          mutez
                          nat
                          address))
                 (big_map (pair nat address) (pair timestamp nat timestamp nat))
                 int
                 int
                 int
                 int
                 (big_map (pair address nat) unit)
                 (big_map (pair address (pair address nat (or unit unit))) unit))
           { UNPAIR ;
             UNPAIR ;
             DUP ;
             GET 19 ;
             DUP 4 ;
             GET 3 ;
             GET 3 ;
             DIG 4 ;
             GET 3 ;
             CAR ;
             PAIR ;
             NONE unit ;
             SWAP ;
             UPDATE ;
             UPDATE 19 ;
             DUP ;
             GET 7 ;
             DIG 2 ;
             NONE (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                        (pair address
                              nat
                              (pair address nat (or unit unit))
                              (pair address nat (or unit unit))
                              (or unit unit))
                        address
                        (option (pair address nat (or unit unit)))
                        (option address)
                        (option address)
                        (option address)
                        (or (or unit unit) unit)
                        nat
                        nat
                        (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                              timestamp
                              timestamp
                              nat
                              nat
                              address)
                        bool
                        nat
                        mutez
                        nat
                        address) ;
             SWAP ;
             UPDATE ;
             UPDATE 7 } ;
         DUP 31 ;
         DUP 28 ;
         DUP 26 ;
         DUP 20 ;
         DUP 9 ;
         DUP 9 ;
         DUP 9 ;
         DUP 8 ;
         PAIR 8 ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair (pair address
                                            address
                                            nat
                                            (big_map
                                               nat
                                               (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                                     (pair address
                                                           nat
                                                           (pair address nat (or unit unit))
                                                           (pair address nat (or unit unit))
                                                           (or unit unit))
                                                     address
                                                     (option (pair address nat (or unit unit)))
                                                     (option address)
                                                     (option address)
                                                     (option address)
                                                     (or (or unit unit) unit)
                                                     nat
                                                     nat
                                                     (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                           timestamp
                                                           timestamp
                                                           nat
                                                           nat
                                                           address)
                                                     bool
                                                     nat
                                                     mutez
                                                     nat
                                                     address))
                                            (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                            int
                                            int
                                            int
                                            int
                                            (big_map (pair address nat) unit)
                                            (big_map (pair address (pair address nat (or unit unit))) unit))
                                      nat)
                                (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                      (pair address
                                            nat
                                            (pair address nat (or unit unit))
                                            (pair address nat (or unit unit))
                                            (or unit unit))
                                      address
                                      (option (pair address nat (or unit unit)))
                                      (option address)
                                      (option address)
                                      (option address)
                                      (or (or unit unit) unit)
                                      nat
                                      nat
                                      (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                            timestamp
                                            timestamp
                                            nat
                                            nat
                                            address)
                                      bool
                                      nat
                                      mutez
                                      nat
                                      address))
                          (pair address
                                address
                                nat
                                (big_map
                                   nat
                                   (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                         (pair address
                                               nat
                                               (pair address nat (or unit unit))
                                               (pair address nat (or unit unit))
                                               (or unit unit))
                                         address
                                         (option (pair address nat (or unit unit)))
                                         (option address)
                                         (option address)
                                         (option address)
                                         (or (or unit unit) unit)
                                         nat
                                         nat
                                         (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                               timestamp
                                               timestamp
                                               nat
                                               nat
                                               address)
                                         bool
                                         nat
                                         mutez
                                         nat
                                         address))
                                (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                int
                                int
                                int
                                int
                                (big_map (pair address nat) unit)
                                (big_map (pair address (pair address nat (or unit unit))) unit)))
                       (pair (lambda
                                (pair (pair (pair address
                                                  address
                                                  nat
                                                  (big_map
                                                     nat
                                                     (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                                           (pair address
                                                                 nat
                                                                 (pair address nat (or unit unit))
                                                                 (pair address nat (or unit unit))
                                                                 (or unit unit))
                                                           address
                                                           (option (pair address nat (or unit unit)))
                                                           (option address)
                                                           (option address)
                                                           (option address)
                                                           (or (or unit unit) unit)
                                                           nat
                                                           nat
                                                           (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                                 timestamp
                                                                 timestamp
                                                                 nat
                                                                 nat
                                                                 address)
                                                           bool
                                                           nat
                                                           mutez
                                                           nat
                                                           address))
                                                  (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                                  int
                                                  int
                                                  int
                                                  int
                                                  (big_map (pair address nat) unit)
                                                  (big_map (pair address (pair address nat (or unit unit))) unit))
                                            nat)
                                      (pair timestamp nat timestamp nat))
                                (pair address
                                      address
                                      nat
                                      (big_map
                                         nat
                                         (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                               (pair address
                                                     nat
                                                     (pair address nat (or unit unit))
                                                     (pair address nat (or unit unit))
                                                     (or unit unit))
                                               address
                                               (option (pair address nat (or unit unit)))
                                               (option address)
                                               (option address)
                                               (option address)
                                               (or (or unit unit) unit)
                                               nat
                                               nat
                                               (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                     timestamp
                                                     timestamp
                                                     nat
                                                     nat
                                                     address)
                                               bool
                                               nat
                                               mutez
                                               nat
                                               address))
                                      (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                      int
                                      int
                                      int
                                      int
                                      (big_map (pair address nat) unit)
                                      (big_map (pair address (pair address nat (or unit unit))) unit)))
                             (pair (lambda
                                      (pair (pair address
                                                  address
                                                  nat
                                                  (big_map
                                                     nat
                                                     (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                                           (pair address
                                                                 nat
                                                                 (pair address nat (or unit unit))
                                                                 (pair address nat (or unit unit))
                                                                 (or unit unit))
                                                           address
                                                           (option (pair address nat (or unit unit)))
                                                           (option address)
                                                           (option address)
                                                           (option address)
                                                           (or (or unit unit) unit)
                                                           nat
                                                           nat
                                                           (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                                 timestamp
                                                                 timestamp
                                                                 nat
                                                                 nat
                                                                 address)
                                                           bool
                                                           nat
                                                           mutez
                                                           nat
                                                           address))
                                                  (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                                  int
                                                  int
                                                  int
                                                  int
                                                  (big_map (pair address nat) unit)
                                                  (big_map (pair address (pair address nat (or unit unit))) unit))
                                            nat)
                                      (pair timestamp nat timestamp nat))
                                   (pair (lambda
                                            (pair (pair address
                                                        address
                                                        nat
                                                        (big_map
                                                           nat
                                                           (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                                                 (pair address
                                                                       nat
                                                                       (pair address nat (or unit unit))
                                                                       (pair address nat (or unit unit))
                                                                       (or unit unit))
                                                                 address
                                                                 (option (pair address nat (or unit unit)))
                                                                 (option address)
                                                                 (option address)
                                                                 (option address)
                                                                 (or (or unit unit) unit)
                                                                 nat
                                                                 nat
                                                                 (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                                       timestamp
                                                                       timestamp
                                                                       nat
                                                                       nat
                                                                       address)
                                                                 bool
                                                                 nat
                                                                 mutez
                                                                 nat
                                                                 address))
                                                        (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                                        int
                                                        int
                                                        int
                                                        int
                                                        (big_map (pair address nat) unit)
                                                        (big_map (pair address (pair address nat (or unit unit))) unit))
                                                  nat)
                                            (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                                  (pair address
                                                        nat
                                                        (pair address nat (or unit unit))
                                                        (pair address nat (or unit unit))
                                                        (or unit unit))
                                                  address
                                                  (option (pair address nat (or unit unit)))
                                                  (option address)
                                                  (option address)
                                                  (option address)
                                                  (or (or unit unit) unit)
                                                  nat
                                                  nat
                                                  (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                        timestamp
                                                        timestamp
                                                        nat
                                                        nat
                                                        address)
                                                  bool
                                                  nat
                                                  mutez
                                                  nat
                                                  address))
                                         (pair (lambda
                                                  (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                                        (pair address
                                                              nat
                                                              (pair address nat (or unit unit))
                                                              (pair address nat (or unit unit))
                                                              (or unit unit))
                                                        address
                                                        (option (pair address nat (or unit unit)))
                                                        (option address)
                                                        (option address)
                                                        (option address)
                                                        (or (or unit unit) unit)
                                                        nat
                                                        nat
                                                        (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                              timestamp
                                                              timestamp
                                                              nat
                                                              nat
                                                              address)
                                                        bool
                                                        nat
                                                        mutez
                                                        nat
                                                        address)
                                                  (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                                        (pair address
                                                              nat
                                                              (pair address nat (or unit unit))
                                                              (pair address nat (or unit unit))
                                                              (or unit unit))
                                                        address
                                                        (option (pair address nat (or unit unit)))
                                                        (option address)
                                                        (option address)
                                                        (option address)
                                                        (or (or unit unit) unit)
                                                        nat
                                                        nat
                                                        (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                              timestamp
                                                              timestamp
                                                              nat
                                                              nat
                                                              address)
                                                        bool
                                                        nat
                                                        mutez
                                                        nat
                                                        address))
                                               (pair (lambda address (contract (pair nat nat address address)))
                                                     (pair (lambda address (contract (pair nat nat)))
                                                           (lambda
                                                              (pair (pair (pair address nat (or unit unit)) address) (pair address nat))
                                                              operation))))))))
                 (pair (pair (pair address
                                   address
                                   nat
                                   (big_map
                                      nat
                                      (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                            (pair address
                                                  nat
                                                  (pair address nat (or unit unit))
                                                  (pair address nat (or unit unit))
                                                  (or unit unit))
                                            address
                                            (option (pair address nat (or unit unit)))
                                            (option address)
                                            (option address)
                                            (option address)
                                            (or (or unit unit) unit)
                                            nat
                                            nat
                                            (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                  timestamp
                                                  timestamp
                                                  nat
                                                  nat
                                                  address)
                                            bool
                                            nat
                                            mutez
                                            nat
                                            address))
                                   (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                   int
                                   int
                                   int
                                   int
                                   (big_map (pair address nat) unit)
                                   (big_map (pair address (pair address nat (or unit unit))) unit))
                             nat)
                       nat))
           (pair (list operation)
                 (pair address
                       address
                       nat
                       (big_map
                          nat
                          (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                (pair address
                                      nat
                                      (pair address nat (or unit unit))
                                      (pair address nat (or unit unit))
                                      (or unit unit))
                                address
                                (option (pair address nat (or unit unit)))
                                (option address)
                                (option address)
                                (option address)
                                (or (or unit unit) unit)
                                nat
                                nat
                                (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                      timestamp
                                      timestamp
                                      nat
                                      nat
                                      address)
                                bool
                                nat
                                mutez
                                nat
                                address))
                       (big_map (pair nat address) (pair timestamp nat timestamp nat))
                       int
                       int
                       int
                       int
                       (big_map (pair address nat) unit)
                       (big_map (pair address (pair address nat (or unit unit))) unit)))
           { UNPAIR ;
             UNPAIR 8 ;
             DIG 8 ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 7 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             DUP 3 ;
             PAIR ;
             DIG 7 ;
             SWAP ;
             EXEC ;
             DIG 4 ;
             SWAP ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP 5 ;
             DROP ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { SWAP ; DROP ; DUP ; GET 3 } { SWAP } ;
             DUP ;
             DUP 3 ;
             GET 3 ;
             SUB ;
             PUSH int 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             LT ;
             IF { PUSH string "MPool/InsufficientFunds" ; FAILWITH }
                { DUP 4 ;
                  CAR ;
                  GET 7 ;
                  INT ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  PUSH int 0 ;
                  DUP 3 ;
                  COMPARE ;
                  GT ;
                  AND ;
                  IF { PUSH string "MPool/UnderMinDeposit" ; FAILWITH } {} } ;
             DIG 3 ;
             DIG 9 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             DIG 4 ;
             DIG 2 ;
             DUP ;
             GET 21 ;
             CAR ;
             UNIT ;
             RIGHT unit ;
             LEFT (or unit unit) ;
             LEFT (or unit unit) ;
             COMPARE ;
             EQ ;
             IF { DUP ;
                  GET 21 ;
                  GET 5 ;
                  DUP ;
                  DUP 3 ;
                  CAR ;
                  GET 5 ;
                  INT ;
                  DUP 5 ;
                  CAR ;
                  ADD ;
                  COMPARE ;
                  GT ;
                  DUP ;
                  DUP 5 ;
                  GET 3 ;
                  DUP 7 ;
                  COMPARE ;
                  EQ ;
                  AND ;
                  IF { DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 21 ;
                       GET 3 ;
                       DUP 3 ;
                       CAR ;
                       CAR ;
                       IF_LEFT
                         { DIG 5 ;
                           DROP ;
                           IF_LEFT
                             { DROP 3 ;
                               DUP ;
                               DUP ;
                               DUG 2 ;
                               GET 21 ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               GET 21 ;
                               GET 7 ;
                               SUB ;
                               ABS ;
                               UPDATE 7 ;
                               UPDATE 21 }
                             { DROP ;
                               DUP 4 ;
                               CAR ;
                               DIG 3 ;
                               DUP ;
                               DUP ;
                               DUG 5 ;
                               GET 21 ;
                               DUP 4 ;
                               DUP 4 ;
                               COMPARE ;
                               LT ;
                               IF { DIG 2 ; DROP ; DIG 2 } { DIG 3 ; DROP ; DIG 2 } ;
                               DIG 3 ;
                               SUB ;
                               ABS ;
                               DIG 3 ;
                               GET 21 ;
                               GET 7 ;
                               SUB ;
                               ABS ;
                               UPDATE 7 ;
                               UPDATE 21 } }
                         { DROP ;
                           DUP 4 ;
                           GET 5 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           COMPARE ;
                           GT ;
                           IF { SWAP ;
                                DROP ;
                                DIG 2 ;
                                DUP ;
                                DUP ;
                                DUG 4 ;
                                GET 21 ;
                                DUP 6 ;
                                GET 6 ;
                                DIG 5 ;
                                GET 21 ;
                                GET 7 ;
                                SUB ;
                                ABS ;
                                UPDATE 7 ;
                                UPDATE 21 ;
                                DUP ;
                                DUP ;
                                DUG 2 ;
                                GET 21 ;
                                DIG 6 ;
                                DIG 4 ;
                                DIG 5 ;
                                SUB ;
                                ABS ;
                                MUL ;
                                DIG 3 ;
                                GET 21 ;
                                GET 7 ;
                                SUB ;
                                ABS ;
                                UPDATE 7 ;
                                UPDATE 21 }
                              { DROP ;
                                DIG 2 ;
                                DUP ;
                                DUP ;
                                DUG 4 ;
                                GET 21 ;
                                DIG 6 ;
                                DIG 3 ;
                                DIG 4 ;
                                SUB ;
                                ABS ;
                                MUL ;
                                DIG 3 ;
                                GET 21 ;
                                GET 7 ;
                                SUB ;
                                ABS ;
                                UPDATE 7 ;
                                UPDATE 21 } } ;
                       PAIR }
                     { SWAP ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       UNIT ;
                       RIGHT (or unit unit) ;
                       COMPARE ;
                       EQ ;
                       AND ;
                       IF { SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 5 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 21 ;
                            GET 3 ;
                            DUP ;
                            DUP 3 ;
                            COMPARE ;
                            LE ;
                            IF { SWAP ; DROP ; DUP 3 ; GET 3 ; SWAP ; NOW ; SUB ; ABS ; MUL }
                               { DROP ;
                                 DUP 3 ;
                                 GET 3 ;
                                 SWAP ;
                                 NOW ;
                                 SUB ;
                                 ABS ;
                                 MUL ;
                                 DUP 3 ;
                                 GET 6 ;
                                 ADD } ;
                            SWAP ;
                            DUP ;
                            DUP ;
                            DUG 3 ;
                            GET 21 ;
                            DIG 5 ;
                            NOW ;
                            DUP 6 ;
                            GET 21 ;
                            GET 5 ;
                            SUB ;
                            ABS ;
                            MUL ;
                            DIG 4 ;
                            GET 21 ;
                            GET 7 ;
                            SUB ;
                            ABS ;
                            UPDATE 7 ;
                            UPDATE 21 ;
                            DUG 2 ;
                            UPDATE 6 ;
                            PAIR }
                          { DIG 2 ; DROP ; SWAP ; PAIR } ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       PAIR } ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  PAIR }
                { DIG 2 ; DROP ; SWAP ; PAIR } ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 2 ;
             ABS ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { SWAP ; DUP ; DUG 2 ; PUSH nat 1 ; DIG 3 ; GET 19 ; SUB ; ABS ; UPDATE 19 }
                { SWAP } ;
             DUP ;
             DUP 5 ;
             DIG 2 ;
             GET 17 ;
             SUB ;
             ABS ;
             UPDATE 17 ;
             DIG 2 ;
             CDR ;
             DIG 2 ;
             UPDATE 3 ;
             NOW ;
             UPDATE 5 ;
             DUG 2 ;
             DUP ;
             DUG 3 ;
             GET 3 ;
             NIL operation ;
             DUP 3 ;
             SENDER ;
             PAIR ;
             SELF_ADDRESS ;
             DUP 4 ;
             GET 5 ;
             PAIR ;
             PAIR ;
             DIG 13 ;
             SWAP ;
             EXEC ;
             CONS ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 8 ;
             IF_LEFT
               { DIG 11 ;
                 DROP 2 ;
                 DUG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET 3 ;
                 DIG 3 ;
                 CAR ;
                 DIG 11 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DIG 3 ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS }
               { DIG 12 ;
                 DROP 2 ;
                 DUG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET 3 ;
                 DIG 3 ;
                 CAR ;
                 DIG 11 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DIG 3 ;
                 SELF_ADDRESS ;
                 SELF_ADDRESS ;
                 DIG 3 ;
                 DIG 3 ;
                 PAIR 4 ;
                 TRANSFER_TOKENS ;
                 CONS } ;
             SWAP ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 15 ;
             UNIT ;
             RIGHT (or unit unit) ;
             COMPARE ;
             EQ ;
             DUP 3 ;
             GET 17 ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             AND ;
             IF { SWAP ; DUP 4 ; DIG 3 ; PAIR ; PAIR ; DIG 3 ; SWAP ; EXEC }
                { SWAP ;
                  DIG 4 ;
                  DROP 2 ;
                  DUP ;
                  CAR ;
                  CAR ;
                  DUP 4 ;
                  DIG 3 ;
                  DUP ;
                  GET 7 ;
                  DIG 3 ;
                  DIG 3 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  UPDATE 7 } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             SWAP ;
             CDR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 32 ;
         DUP 33 ;
         DIG 31 ;
         DIG 22 ;
         DUP 21 ;
         DUP 18 ;
         DIG 17 ;
         DUP 16 ;
         DUP 15 ;
         DUP 15 ;
         PAIR 10 ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair address
                                      address
                                      nat
                                      (big_map
                                         nat
                                         (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                               (pair address
                                                     nat
                                                     (pair address nat (or unit unit))
                                                     (pair address nat (or unit unit))
                                                     (or unit unit))
                                               address
                                               (option (pair address nat (or unit unit)))
                                               (option address)
                                               (option address)
                                               (option address)
                                               (or (or unit unit) unit)
                                               nat
                                               nat
                                               (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                     timestamp
                                                     timestamp
                                                     nat
                                                     nat
                                                     address)
                                               bool
                                               nat
                                               mutez
                                               nat
                                               address))
                                      (big_map (pair nat address) (pair timestamp nat timestamp nat))
                                      int
                                      int
                                      int
                                      int
                                      (big_map (pair address nat) unit)
                                      (big_map (pair address (pair address nat (or unit unit))) unit))
                                nat)
                          (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                (pair address
                                      nat
                                      (pair address nat (or unit unit))
                                      (pair address nat (or unit unit))
                                      (or unit unit))
                                address
                                (option (pair address nat (or unit unit)))
                                (option address)
                                (option address)
                                (option address)
                                (or (or unit unit) unit)
                                nat
                                nat
                                (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                      timestamp
                                      timestamp
                                      nat
                                      nat
                                      address)
                                bool
                                nat
                                mutez
                                nat
                                address))
                       (pair (lambda
                                (pair (pair nat
                                            (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                                  (pair address
                                                        nat
                                                        (pair address nat (or unit unit))
                                                        (pair address nat (or unit unit))
                                                        (or unit unit))
                                                  address
                                                  (option (pair address nat (or unit unit)))
                                                  (option address)
                                                  (option address)
                                                  (option address)
                                                  (or (or unit unit) unit)
                                                  nat
                                                  nat
                                                  (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                        timestamp
                                                        timestamp
                                                        nat
                                                        nat
                                                        address)
                                                  bool
                                                  nat
                                                  mutez
                                                  nat
                                                  address))
                                      (list operation))
                                (pair (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                            (pair address
                                                  nat
                                                  (pair address nat (or unit unit))
                                                  (pair address nat (or unit unit))
                                                  (or unit unit))
                                            address
                                            (option (pair address nat (or unit unit)))
                                            (option address)
                                            (option address)
                                            (option address)
                                            (or (or unit unit) unit)
                                            nat
                                            nat
                                            (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                  timestamp
                                                  timestamp
                                                  nat
                                                  nat
                                                  address)
                                            bool
                                            nat
                                            mutez
                                            nat
                                            address)
                                      (list operation)))
                             (pair (lambda
                                      (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                            (pair address
                                                  nat
                                                  (pair address nat (or unit unit))
                                                  (pair address nat (or unit unit))
                                                  (or unit unit))
                                            address
                                            (option (pair address nat (or unit unit)))
                                            (option address)
                                            (option address)
                                            (option address)
                                            (or (or unit unit) unit)
                                            nat
                                            nat
                                            (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                                  timestamp
                                                  timestamp
                                                  nat
                                                  nat
                                                  address)
                                            bool
                                            nat
                                            mutez
                                            nat
                                            address)
                                      (pair address nat (or unit unit)))
                                   (pair string
                                         (pair string
                                               (pair string
                                                     (pair (lambda address (contract (pair (pair nat nat) address)))
                                                           (pair (lambda (pair (pair (pair address nat (or unit unit)) address) nat) operation)
                                                                 (pair (lambda
                                                                          (pair (pair (pair address nat (or unit unit)) address) (pair address nat))
                                                                          operation)
                                                                       (lambda (pair (pair address nat (or unit unit)) (pair address nat (or unit unit))) bool))))))))))
                 (pair (pair address
                             address
                             nat
                             (big_map
                                nat
                                (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                      (pair address
                                            nat
                                            (pair address nat (or unit unit))
                                            (pair address nat (or unit unit))
                                            (or unit unit))
                                      address
                                      (option (pair address nat (or unit unit)))
                                      (option address)
                                      (option address)
                                      (option address)
                                      (or (or unit unit) unit)
                                      nat
                                      nat
                                      (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                            timestamp
                                            timestamp
                                            nat
                                            nat
                                            address)
                                      bool
                                      nat
                                      mutez
                                      nat
                                      address))
                             (big_map (pair nat address) (pair timestamp nat timestamp nat))
                             int
                             int
                             int
                             int
                             (big_map (pair address nat) unit)
                             (big_map (pair address (pair address nat (or unit unit))) unit))
                       nat))
           (pair (list operation)
                 (pair address
                       address
                       nat
                       (big_map
                          nat
                          (pair (pair (or (or unit unit) unit) nat nat nat nat nat nat nat)
                                (pair address
                                      nat
                                      (pair address nat (or unit unit))
                                      (pair address nat (or unit unit))
                                      (or unit unit))
                                address
                                (option (pair address nat (or unit unit)))
                                (option address)
                                (option address)
                                (option address)
                                (or (or unit unit) unit)
                                nat
                                nat
                                (pair (or (or (or unit unit) (or unit unit)) (or unit unit))
                                      timestamp
                                      timestamp
                                      nat
                                      nat
                                      address)
                                bool
                                nat
                                mutez
                                nat
                                address))
                       (big_map (pair nat address) (pair timestamp nat timestamp nat))
                       int
                       int
                       int
                       int
                       (big_map (pair address nat) unit)
                       (big_map (pair address (pair address nat (or unit unit))) unit)))
           { UNPAIR ;
             UNPAIR 10 ;
             DIG 10 ;
             UNPAIR ;
             PUSH int 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 13 ;
             COMPARE ;
             GE ;
             IF { DUP ;
                  GET 13 ;
                  ABS ;
                  SWAP ;
                  PUSH int 1 ;
                  NEG ;
                  UPDATE 13 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  PAIR ;
                  DUP 5 ;
                  SWAP ;
                  EXEC ;
                  DUP 4 ;
                  SWAP ;
                  DUP 4 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  GET 3 ;
                  GET 7 ;
                  CAR ;
                  SENDER ;
                  COMPARE ;
                  EQ ;
                  IF {} { DUP 10 ; FAILWITH } ;
                  NIL operation ;
                  DUP 3 ;
                  GET 25 ;
                  DIG 4 ;
                  SUB ;
                  PUSH int 0 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  IF { DUP 12 ; FAILWITH } {} ;
                  ABS ;
                  PUSH nat 100 ;
                  DUP 5 ;
                  CAR ;
                  GET 14 ;
                  DUP 3 ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  PUSH nat 0 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  GT ;
                  IF { DIG 2 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP 6 ;
                       GET 13 ;
                       IF_NONE { DUP 14 ; FAILWITH } {} ;
                       PAIR ;
                       SELF_ADDRESS ;
                       DUP 7 ;
                       GET 3 ;
                       GET 7 ;
                       PAIR ;
                       PAIR ;
                       DUP 18 ;
                       SWAP ;
                       EXEC ;
                       CONS }
                     { DIG 2 } ;
                  PUSH nat 100 ;
                  DUP 6 ;
                  CAR ;
                  GET 13 ;
                  DUP 5 ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  DUP ;
                  DUP 4 ;
                  DIG 5 ;
                  SUB ;
                  SUB ;
                  ABS ;
                  PUSH nat 0 ;
                  SWAP ;
                  COMPARE ;
                  GT ;
                  IF { SWAP ;
                       DIG 2 ;
                       DUP 5 ;
                       GET 21 ;
                       GET 10 ;
                       PAIR ;
                       SELF_ADDRESS ;
                       DUP 6 ;
                       GET 3 ;
                       GET 7 ;
                       PAIR ;
                       PAIR ;
                       DIG 16 ;
                       SWAP ;
                       EXEC ;
                       CONS }
                     { DIG 2 ; DIG 16 ; DROP 2 ; SWAP } ;
                  PUSH nat 0 ;
                  DUP 3 ;
                  COMPARE ;
                  GT ;
                  IF { DUP 4 ;
                       DUP 11 ;
                       SWAP ;
                       EXEC ;
                       DUP 5 ;
                       GET 3 ;
                       GET 7 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       PAIR ;
                       DIG 17 ;
                       SWAP ;
                       EXEC ;
                       IF { DIG 13 ;
                            DIG 14 ;
                            DROP 2 ;
                            SWAP ;
                            DIG 2 ;
                            SELF_ADDRESS ;
                            DIG 3 ;
                            PAIR ;
                            PAIR ;
                            DUP 13 ;
                            SWAP ;
                            EXEC ;
                            CONS ;
                            DUG 2 ;
                            PAIR ;
                            PAIR ;
                            DUP 6 ;
                            SWAP ;
                            EXEC ;
                            DUP ;
                            CAR ;
                            SWAP ;
                            CDR ;
                            PAIR }
                          { DROP ;
                            DIG 3 ;
                            AMOUNT ;
                            BALANCE ;
                            ADD ;
                            UPDATE 27 ;
                            SWAP ;
                            SELF_ADDRESS ;
                            CONTRACT %afterReward2Tez nat ;
                            IF_NONE { DIG 12 ; FAILWITH } { DIG 13 ; DROP } ;
                            PUSH mutez 0 ;
                            DIG 5 ;
                            TRANSFER_TOKENS ;
                            CONS ;
                            SELF_ADDRESS ;
                            PUSH nat 1 ;
                            PAIR ;
                            DIG 3 ;
                            DUP 4 ;
                            GET 9 ;
                            IF_NONE { DUP 12 ; FAILWITH } {} ;
                            DIG 2 ;
                            UNPAIR ;
                            DIG 2 ;
                            DIG 14 ;
                            SWAP ;
                            EXEC ;
                            PUSH mutez 0 ;
                            DIG 3 ;
                            DIG 3 ;
                            DIG 4 ;
                            PAIR ;
                            PAIR ;
                            TRANSFER_TOKENS ;
                            CONS ;
                            PAIR } ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       PAIR }
                     { SWAP ; DIG 2 ; DIG 12 ; DIG 13 ; DIG 15 ; DROP 5 ; SWAP ; PAIR } ;
                  UNPAIR ;
                  DIG 3 ;
                  DIG 3 ;
                  DUP ;
                  GET 7 ;
                  DIG 3 ;
                  DIG 3 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  UPDATE 7 ;
                  PAIR }
                { DIG 7 ; DIG 8 ; DIG 10 ; DIG 11 ; DROP 4 ; NIL operation ; SWAP ; PAIR } ;
             DUP ;
             CAR ;
             PUSH int 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 11 ;
             COMPARE ;
             GE ;
             IF { DUP ;
                  GET 11 ;
                  ABS ;
                  SWAP ;
                  PUSH int 1 ;
                  NEG ;
                  UPDATE 11 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  INT ;
                  UPDATE 13 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  PAIR ;
                  DUP 6 ;
                  SWAP ;
                  EXEC ;
                  DUP 5 ;
                  SWAP ;
                  DUP ;
                  GET 3 ;
                  GET 7 ;
                  CAR ;
                  SENDER ;
                  COMPARE ;
                  EQ ;
                  IF {} { DUP 10 ; FAILWITH } ;
                  SWAP ;
                  UPDATE 25 ;
                  DUG 2 ;
                  DUP ;
                  GET 7 ;
                  DIG 3 ;
                  DIG 3 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  UPDATE 7 }
                {} ;
             PUSH int 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 17 ;
             COMPARE ;
             GE ;
             IF { SWAP ;
                  DROP ;
                  DUP ;
                  GET 17 ;
                  ABS ;
                  DUP ;
                  DUP 3 ;
                  PAIR ;
                  DUP 5 ;
                  SWAP ;
                  EXEC ;
                  DUP 4 ;
                  SWAP ;
                  DUP 3 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  DUP 10 ;
                  SWAP ;
                  EXEC ;
                  DUP ;
                  CAR ;
                  SENDER ;
                  COMPARE ;
                  EQ ;
                  IF {} { DUP 11 ; FAILWITH } ;
                  DUP 3 ;
                  GET 29 ;
                  DIG 4 ;
                  SUB ;
                  PUSH int 0 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  IF { DIG 11 ; FAILWITH } { DIG 11 ; DROP } ;
                  NIL operation ;
                  SWAP ;
                  ABS ;
                  SELF_ADDRESS ;
                  DIG 3 ;
                  PAIR ;
                  PAIR ;
                  DIG 11 ;
                  SWAP ;
                  EXEC ;
                  CONS ;
                  DUG 2 ;
                  PAIR ;
                  PAIR ;
                  DIG 5 ;
                  SWAP ;
                  EXEC ;
                  UNPAIR ;
                  DIG 2 ;
                  DIG 3 ;
                  PUSH int 1 ;
                  NEG ;
                  UPDATE 17 ;
                  DUP ;
                  GET 7 ;
                  DIG 3 ;
                  DIG 3 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  UPDATE 7 ;
                  PAIR }
                { DIG 4 ; DIG 7 ; DIG 8 ; DROP 3 ; SWAP ; CDR ; SWAP ; PAIR } ;
             DUP ;
             CAR ;
             PUSH int 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 15 ;
             COMPARE ;
             GE ;
             IF { DUP ;
                  GET 15 ;
                  ABS ;
                  SWAP ;
                  PUSH int 1 ;
                  NEG ;
                  UPDATE 15 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  INT ;
                  UPDATE 17 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  PAIR ;
                  DIG 5 ;
                  SWAP ;
                  EXEC ;
                  DIG 4 ;
                  SWAP ;
                  DUP ;
                  DIG 6 ;
                  SWAP ;
                  EXEC ;
                  CAR ;
                  SENDER ;
                  COMPARE ;
                  EQ ;
                  IF { DIG 5 ; DROP } { DIG 5 ; FAILWITH } ;
                  SWAP ;
                  UPDATE 29 ;
                  DUG 2 ;
                  DUP ;
                  GET 7 ;
                  DIG 3 ;
                  DIG 3 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  UPDATE 7 }
                { DIG 2 ; DIG 3 ; DIG 4 ; DIG 5 ; DROP 4 } ;
             SWAP ;
             CDR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 34 ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DROP 3 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 6 ;
                     DIG 8 ;
                     DIG 11 ;
                     DIG 14 ;
                     DIG 15 ;
                     DIG 16 ;
                     DIG 18 ;
                     DIG 19 ;
                     DIG 20 ;
                     DIG 21 ;
                     DIG 22 ;
                     DIG 23 ;
                     DIG 24 ;
                     DIG 25 ;
                     DIG 27 ;
                     DIG 28 ;
                     DIG 29 ;
                     DIG 30 ;
                     DIG 31 ;
                     DROP 21 ;
                     IF_LEFT
                       { DIG 5 ;
                         DROP ;
                         IF_LEFT
                           { SELF_ADDRESS ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {} { PUSH string "After/Denied" ; FAILWITH } ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 3 ;
                             SWAP ;
                             EXEC ;
                             DUP 3 ;
                             AMOUNT ;
                             BALANCE ;
                             ADD ;
                             DUP 3 ;
                             GET 27 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             LT ;
                             IF { DUP 8 ; FAILWITH } {} ;
                             DUP 3 ;
                             GET 27 ;
                             SWAP ;
                             SUB ;
                             PUSH mutez 0 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             GT ;
                             IF { SWAP ;
                                  DIG 5 ;
                                  DROP 2 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  DIG 5 ;
                                  SWAP ;
                                  EXEC ;
                                  UNIT ;
                                  DIG 8 ;
                                  SWAP ;
                                  EXEC ;
                                  UNIT ;
                                  DIG 8 ;
                                  SWAP ;
                                  EXEC ;
                                  NIL operation ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  DUP 4 ;
                                  PAIR ;
                                  SELF_ADDRESS ;
                                  DUP 6 ;
                                  PAIR ;
                                  PAIR ;
                                  DUP 12 ;
                                  SWAP ;
                                  EXEC ;
                                  CONS ;
                                  SELF_ADDRESS ;
                                  PUSH nat 1 ;
                                  PAIR ;
                                  DIG 5 ;
                                  DUP 7 ;
                                  GET 11 ;
                                  IF_NONE { DIG 9 ; FAILWITH } { DIG 10 ; DROP } ;
                                  DIG 2 ;
                                  UNPAIR ;
                                  DIG 2 ;
                                  DIG 11 ;
                                  SWAP ;
                                  EXEC ;
                                  DUG 3 ;
                                  PAIR ;
                                  TRANSFER_TOKENS ;
                                  CONS ;
                                  SWAP ;
                                  DIG 2 ;
                                  PAIR ;
                                  SELF_ADDRESS ;
                                  DIG 3 ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 5 ;
                                  SWAP ;
                                  EXEC ;
                                  CONS ;
                                  PAIR }
                                { DIG 6 ;
                                  DIG 7 ;
                                  DIG 8 ;
                                  DIG 9 ;
                                  DIG 10 ;
                                  DIG 11 ;
                                  DROP 7 ;
                                  NIL operation ;
                                  DUG 2 ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 3 ;
                                  SWAP ;
                                  EXEC ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  PAIR } ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP 4 ;
                             DUP 3 ;
                             CAR ;
                             GET 21 ;
                             CAR ;
                             UNIT ;
                             RIGHT unit ;
                             LEFT (or unit unit) ;
                             LEFT (or unit unit) ;
                             COMPARE ;
                             EQ ;
                             IF { DIG 4 ; DROP ; DIG 3 } { DIG 3 ; DIG 4 ; INT ; UPDATE 15 } ;
                             DUP ;
                             GET 7 ;
                             DIG 3 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             SWAP ;
                             CDR ;
                             PAIR }
                           { DIG 2 ;
                             DIG 3 ;
                             DIG 4 ;
                             DIG 5 ;
                             DIG 6 ;
                             DIG 7 ;
                             DIG 8 ;
                             DIG 9 ;
                             DROP 8 ;
                             SENDER ;
                             DUP 3 ;
                             CAR ;
                             COMPARE ;
                             EQ ;
                             IF { UNIT }
                                { SENDER ;
                                  DUP 3 ;
                                  GET 3 ;
                                  COMPARE ;
                                  EQ ;
                                  IF {} { PUSH string "MAdmin/Denied" ; FAILWITH } ;
                                  UNIT } ;
                             DROP ;
                             UPDATE 3 ;
                             NIL operation ;
                             PAIR } }
                       { DIG 3 ;
                         DIG 4 ;
                         DIG 6 ;
                         DIG 7 ;
                         DIG 8 ;
                         DIG 9 ;
                         DIG 10 ;
                         DROP 7 ;
                         IF_LEFT
                           { DIG 2 ;
                             DIG 3 ;
                             DROP 2 ;
                             SWAP ;
                             DUP ;
                             CAR ;
                             DIG 2 ;
                             SENDER ;
                             DIG 2 ;
                             COMPARE ;
                             EQ ;
                             IF {} { PUSH string "MOwner/Denied" ; FAILWITH } ;
                             UPDATE 1 ;
                             NIL operation ;
                             PAIR }
                           { UNPAIR ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             DUP 3 ;
                             PAIR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DIG 3 ;
                             UPDATE 30 ;
                             DUG 2 ;
                             DUP ;
                             GET 7 ;
                             DIG 3 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             NIL operation ;
                             PAIR } } }
                   { DIG 5 ;
                     DIG 7 ;
                     DIG 10 ;
                     DIG 12 ;
                     DIG 13 ;
                     DIG 17 ;
                     DIG 26 ;
                     DROP 7 ;
                     IF_LEFT
                       { DIG 7 ;
                         DIG 9 ;
                         DIG 13 ;
                         DROP 3 ;
                         IF_LEFT
                           { DIG 2 ;
                             DIG 3 ;
                             DIG 4 ;
                             DIG 5 ;
                             DIG 8 ;
                             DIG 17 ;
                             DIG 19 ;
                             DIG 20 ;
                             DROP 8 ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             GET 3 ;
                             DUP 3 ;
                             GET 3 ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 19 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             MEM ;
                             IF { DROP ; PUSH string "MPools/FarmUsed" ; FAILWITH }
                                { SWAP ;
                                  DUP ;
                                  GET 19 ;
                                  UNIT ;
                                  DIG 3 ;
                                  SWAP ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 19 } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 14 ;
                             UNIT ;
                             RIGHT (or unit unit) ;
                             COMPARE ;
                             EQ ;
                             IF { DIG 3 ; FAILWITH } { DIG 3 ; DROP } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             DUP ;
                             GET 5 ;
                             DUP 13 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP ;
                             GET 7 ;
                             DIG 12 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP ;
                             GET 8 ;
                             IF_LEFT
                               { DIG 6 ;
                                 DIG 7 ;
                                 DIG 8 ;
                                 DROP 4 ;
                                 CAR ;
                                 DUP ;
                                 DIG 8 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 DUP ;
                                 DIG 7 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 DIG 5 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 UNIT }
                               { DIG 9 ;
                                 DIG 10 ;
                                 DIG 11 ;
                                 DROP 4 ;
                                 CAR ;
                                 DUP ;
                                 DIG 8 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 DUP ;
                                 DIG 7 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 DIG 5 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 UNIT } ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             GET 13 ;
                             PUSH nat 0 ;
                             COMPARE ;
                             EQ ;
                             IF { DIG 2 ; DROP ; UNIT }
                                { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 11 ;
                                  DUP 3 ;
                                  GET 9 ;
                                  PAIR ;
                                  DUP 3 ;
                                  GET 7 ;
                                  DUP 4 ;
                                  GET 3 ;
                                  GET 7 ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 3 ;
                                  SWAP ;
                                  EXEC } ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 13 ;
                             IF_NONE
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 GET 14 ;
                                 PUSH nat 0 ;
                                 COMPARE ;
                                 EQ ;
                                 IF { UNIT } { PUSH string "MPool/MustFeeAddr" ; FAILWITH } }
                               { DROP ; UNIT } ;
                             DROP ;
                             SENDER ;
                             PUSH nat 0 ;
                             PUSH mutez 0 ;
                             PUSH nat 0 ;
                             PUSH bool False ;
                             DUP 7 ;
                             GET 14 ;
                             UNIT ;
                             LEFT unit ;
                             LEFT unit ;
                             COMPARE ;
                             EQ ;
                             IF { DUP 7 ;
                                  CAR ;
                                  GET 3 ;
                                  UNIT ;
                                  RIGHT unit ;
                                  LEFT (or unit unit) ;
                                  LEFT (or unit unit) ;
                                  PAIR }
                                { PUSH nat 0 ;
                                  UNIT ;
                                  RIGHT unit ;
                                  RIGHT (or unit unit) ;
                                  LEFT (or unit unit) ;
                                  PAIR } ;
                             UNPAIR ;
                             NOW ;
                             DIG 10 ;
                             PUSH nat 0 ;
                             PUSH nat 0 ;
                             DIG 5 ;
                             INT ;
                             DUP 5 ;
                             ADD ;
                             DIG 4 ;
                             DIG 5 ;
                             PAIR 6 ;
                             PUSH nat 0 ;
                             PUSH nat 0 ;
                             DUP 10 ;
                             GET 14 ;
                             DUP 11 ;
                             GET 13 ;
                             DUP 12 ;
                             GET 11 ;
                             DUP 13 ;
                             GET 9 ;
                             DUP 14 ;
                             GET 7 ;
                             DUP 15 ;
                             GET 5 ;
                             DUP 16 ;
                             GET 3 ;
                             DIG 16 ;
                             CAR ;
                             PAIR 16 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             DIG 2 ;
                             PUSH nat 1 ;
                             DUP 3 ;
                             ADD ;
                             UPDATE 5 ;
                             DUP ;
                             GET 7 ;
                             DIG 3 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             NIL operation ;
                             PAIR }
                           { DIG 6 ;
                             DIG 7 ;
                             DIG 9 ;
                             DIG 10 ;
                             DIG 11 ;
                             DIG 12 ;
                             DIG 14 ;
                             DIG 15 ;
                             DIG 18 ;
                             DIG 21 ;
                             DROP 10 ;
                             UNPAIR ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             DUP 3 ;
                             DUP 3 ;
                             PAIR ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             GET 7 ;
                             DUP 3 ;
                             GET 3 ;
                             CAR ;
                             PAIR ;
                             DUP 4 ;
                             GET 20 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             MEM ;
                             NOT ;
                             DIG 6 ;
                             DIG 3 ;
                             PAIR ;
                             DIG 3 ;
                             DUP 6 ;
                             DIG 2 ;
                             UNPAIR ;
                             UNIT ;
                             RIGHT unit ;
                             RIGHT (or unit unit) ;
                             LEFT (or unit unit) ;
                             DUP 5 ;
                             GET 21 ;
                             CAR ;
                             COMPARE ;
                             NEQ ;
                             IF {} { PUSH string "MPool/DepositInactive" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             ADD ;
                             DUP 5 ;
                             CAR ;
                             GET 9 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             GT ;
                             PUSH nat 0 ;
                             DUP 7 ;
                             CAR ;
                             GET 9 ;
                             COMPARE ;
                             GT ;
                             AND ;
                             IF { PUSH string "MPool/OverMaxDeposit" ; FAILWITH } {} ;
                             DIG 4 ;
                             DIG 11 ;
                             SWAP ;
                             EXEC ;
                             DUP 4 ;
                             DIG 3 ;
                             DIG 2 ;
                             DUP ;
                             GET 21 ;
                             GET 5 ;
                             DUP ;
                             DUP 3 ;
                             CAR ;
                             GET 5 ;
                             INT ;
                             DUP 5 ;
                             CAR ;
                             ADD ;
                             COMPARE ;
                             GT ;
                             DUP 3 ;
                             GET 21 ;
                             CAR ;
                             UNIT ;
                             RIGHT unit ;
                             LEFT (or unit unit) ;
                             LEFT (or unit unit) ;
                             COMPARE ;
                             EQ ;
                             AND ;
                             IF { DUP 3 ;
                                  DUP 3 ;
                                  PAIR ;
                                  DUP 3 ;
                                  CAR ;
                                  CAR ;
                                  IF_LEFT
                                    { DIG 5 ;
                                      DROP ;
                                      IF_LEFT
                                        { DIG 2 ;
                                          DROP 2 ;
                                          DIG 2 ;
                                          GET 3 ;
                                          PUSH nat 0 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { SWAP ;
                                               DUP ;
                                               DUP ;
                                               DUG 3 ;
                                               GET 21 ;
                                               PUSH nat 1 ;
                                               DIG 4 ;
                                               GET 21 ;
                                               GET 7 ;
                                               ADD ;
                                               UPDATE 7 ;
                                               UPDATE 21 }
                                             { SWAP } ;
                                          SWAP ;
                                          CDR ;
                                          SWAP ;
                                          PAIR }
                                        { DROP ;
                                          DIG 3 ;
                                          GET 3 ;
                                          PUSH nat 0 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { DIG 2 ;
                                               DUP ;
                                               DUP ;
                                               DUG 4 ;
                                               GET 21 ;
                                               NOW ;
                                               DIG 4 ;
                                               SUB ;
                                               ABS ;
                                               DIG 4 ;
                                               GET 21 ;
                                               GET 7 ;
                                               ADD ;
                                               UPDATE 7 ;
                                               UPDATE 21 }
                                             { SWAP ; DROP ; SWAP } ;
                                          SWAP ;
                                          CDR ;
                                          SWAP ;
                                          PAIR } }
                                    { DROP 2 ;
                                      DUP 3 ;
                                      GET 5 ;
                                      DUP 3 ;
                                      GET 21 ;
                                      GET 3 ;
                                      DUP ;
                                      DUP 3 ;
                                      COMPARE ;
                                      LE ;
                                      IF { SWAP ; DROP ; DUP 4 ; GET 3 ; SWAP ; NOW ; SUB ; ABS ; MUL }
                                         { DROP ;
                                           DUP 4 ;
                                           GET 3 ;
                                           SWAP ;
                                           NOW ;
                                           SUB ;
                                           ABS ;
                                           MUL ;
                                           DUP 4 ;
                                           GET 6 ;
                                           ADD } ;
                                      DIG 2 ;
                                      DUP ;
                                      DUP ;
                                      DUG 4 ;
                                      GET 21 ;
                                      DIG 6 ;
                                      NOW ;
                                      DIG 5 ;
                                      SUB ;
                                      ABS ;
                                      MUL ;
                                      DIG 4 ;
                                      GET 21 ;
                                      GET 7 ;
                                      ADD ;
                                      UPDATE 7 ;
                                      UPDATE 21 ;
                                      DUG 2 ;
                                      UPDATE 6 ;
                                      SWAP ;
                                      PAIR } ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  PAIR }
                                { DIG 3 ; DROP 2 ; SWAP ; PAIR } ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             GET 3 ;
                             PUSH nat 0 ;
                             COMPARE ;
                             EQ ;
                             IF { SWAP ; DUP ; DUG 2 ; PUSH nat 1 ; DIG 3 ; GET 19 ; ADD ; UPDATE 19 }
                                { SWAP } ;
                             DUP ;
                             DUP 5 ;
                             DIG 2 ;
                             GET 17 ;
                             ADD ;
                             UPDATE 17 ;
                             SWAP ;
                             DIG 2 ;
                             UPDATE 3 ;
                             NOW ;
                             UPDATE 5 ;
                             DIG 4 ;
                             DIG 3 ;
                             DUP 4 ;
                             GET 3 ;
                             NIL operation ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 8 ;
                             IF_LEFT
                               { DIG 13 ;
                                 DROP 2 ;
                                 DUP 3 ;
                                 DUP 3 ;
                                 GET 3 ;
                                 DUP 4 ;
                                 CAR ;
                                 DIG 15 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH mutez 0 ;
                                 DIG 3 ;
                                 DIG 3 ;
                                 PAIR ;
                                 TRANSFER_TOKENS ;
                                 CONS }
                               { DIG 14 ;
                                 DROP 2 ;
                                 DUP 3 ;
                                 DUP 3 ;
                                 GET 3 ;
                                 DUP 4 ;
                                 CAR ;
                                 DIG 15 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH mutez 0 ;
                                 DIG 3 ;
                                 DIG 3 ;
                                 PUSH key_hash "tz1ZZZZZZZZZZZZZZZZZZZZZZZZZZZZNkiRg" ;
                                 SELF_ADDRESS ;
                                 NONE address ;
                                 DIG 4 ;
                                 DIG 4 ;
                                 PAIR 5 ;
                                 TRANSFER_TOKENS ;
                                 CONS } ;
                             DIG 3 ;
                             IF { PUSH nat 1000000000000 ;
                                  DUP 3 ;
                                  CAR ;
                                  DUP 4 ;
                                  GET 5 ;
                                  DUP ;
                                  GET 4 ;
                                  IF_LEFT
                                    { DIG 16 ;
                                      DROP 2 ;
                                      CAR ;
                                      DIG 15 ;
                                      SWAP ;
                                      EXEC ;
                                      PUSH mutez 0 ;
                                      DIG 3 ;
                                      DIG 3 ;
                                      PAIR ;
                                      TRANSFER_TOKENS }
                                    { DIG 3 ;
                                      DIG 17 ;
                                      DROP 3 ;
                                      DUP ;
                                      DUG 2 ;
                                      GET 3 ;
                                      DIG 2 ;
                                      CAR ;
                                      DIG 15 ;
                                      SWAP ;
                                      EXEC ;
                                      PUSH mutez 0 ;
                                      DIG 3 ;
                                      DIG 3 ;
                                      NIL (or (pair address address nat) (pair address address nat)) ;
                                      SWAP ;
                                      DIG 2 ;
                                      SELF_ADDRESS ;
                                      PAIR 3 ;
                                      LEFT (pair address address nat) ;
                                      CONS ;
                                      TRANSFER_TOKENS } ;
                                  CONS }
                                { DIG 12 ; DIG 13 ; DROP 2 } ;
                             DUP 3 ;
                             DUP 3 ;
                             CAR ;
                             PAIR ;
                             SELF_ADDRESS ;
                             DUP 4 ;
                             GET 5 ;
                             PAIR ;
                             PAIR ;
                             DUP 13 ;
                             SWAP ;
                             EXEC ;
                             CONS ;
                             DIG 2 ;
                             SELF_ADDRESS ;
                             PAIR ;
                             SENDER ;
                             DIG 3 ;
                             GET 5 ;
                             PAIR ;
                             PAIR ;
                             DIG 10 ;
                             SWAP ;
                             EXEC ;
                             CONS ;
                             DIG 2 ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             CDR ;
                             DUG 2 ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             CDR ;
                             DUP 5 ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             DIG 6 ;
                             DIG 6 ;
                             DUP ;
                             GET 20 ;
                             UNIT ;
                             DIG 8 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 20 ;
                             DUP ;
                             GET 7 ;
                             DIG 3 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             PAIR ;
                             PAIR ;
                             DIG 2 ;
                             SWAP ;
                             EXEC ;
                             SWAP ;
                             CDR ;
                             PAIR } }
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 5 ;
                         DIG 10 ;
                         DIG 14 ;
                         DIG 15 ;
                         DIG 16 ;
                         DIG 17 ;
                         DIG 18 ;
                         DIG 19 ;
                         DIG 20 ;
                         DIG 21 ;
                         DIG 22 ;
                         DIG 23 ;
                         DIG 24 ;
                         DROP 15 ;
                         IF_LEFT
                           { DIG 5 ;
                             DIG 6 ;
                             DIG 9 ;
                             DROP 3 ;
                             UNPAIR ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             DUP 3 ;
                             PAIR ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DIG 3 ;
                             SWAP ;
                             UNIT ;
                             RIGHT unit ;
                             RIGHT (or unit unit) ;
                             LEFT (or unit unit) ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 21 ;
                             CAR ;
                             COMPARE ;
                             NEQ ;
                             IF { PUSH string "MPool/EditActive" ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             IF_NONE { DIG 5 ; DROP } { DUP ; DIG 7 ; SWAP ; EXEC ; DROP ; UPDATE 1 } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             IF_NONE { DIG 5 ; DROP } { DUP ; DIG 7 ; SWAP ; EXEC ; DROP ; UPDATE 5 } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             IF_NONE {} { SOME ; UPDATE 7 } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             IF_NONE {} { SOME ; UPDATE 9 } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 9 ;
                             IF_NONE {} { SOME ; UPDATE 11 } ;
                             DUP ;
                             CAR ;
                             GET 13 ;
                             PUSH nat 0 ;
                             COMPARE ;
                             EQ ;
                             IF { DIG 4 ; DROP ; UNIT }
                                { DUP ;
                                  GET 11 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 9 ;
                                  PAIR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 7 ;
                                  DUP 3 ;
                                  GET 3 ;
                                  GET 7 ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 5 ;
                                  SWAP ;
                                  EXEC } ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 11 ;
                             IF_NONE {} { SOME ; UPDATE 13 } ;
                             SWAP ;
                             GET 12 ;
                             IF_NONE {} { UPDATE 15 } ;
                             DUG 2 ;
                             DUP ;
                             GET 7 ;
                             DIG 3 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             NIL operation ;
                             PAIR }
                           { DIG 3 ;
                             DIG 7 ;
                             DIG 8 ;
                             DROP 3 ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 3 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             DUP 3 ;
                             PAIR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP 3 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 21 ;
                             CAR ;
                             UNIT ;
                             LEFT unit ;
                             RIGHT (or unit unit) ;
                             LEFT (or unit unit) ;
                             COMPARE ;
                             EQ ;
                             IF { DIG 4 ; DROP } { DIG 4 ; FAILWITH } ;
                             NIL operation ;
                             SELF_ADDRESS ;
                             CONTRACT %onRandom (pair nat nat) ;
                             IF_NONE { DIG 5 ; FAILWITH } { DIG 6 ; DROP } ;
                             DIG 2 ;
                             PAIR ;
                             DUP 3 ;
                             GET 21 ;
                             GET 5 ;
                             DUP 4 ;
                             GET 5 ;
                             DIG 2 ;
                             UNPAIR ;
                             DIG 2 ;
                             DIG 8 ;
                             SWAP ;
                             EXEC ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             DIG 3 ;
                             DIG 4 ;
                             PAIR ;
                             PAIR ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             SWAP ;
                             DUP ;
                             GET 21 ;
                             UNIT ;
                             LEFT unit ;
                             RIGHT (or (or unit unit) (or unit unit)) ;
                             UPDATE 1 ;
                             UPDATE 21 ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DIG 3 ;
                             DIG 3 ;
                             DUP ;
                             GET 7 ;
                             DIG 3 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             SWAP ;
                             CDR ;
                             PAIR } } } }
               { DIG 5 ;
                 DIG 6 ;
                 DIG 9 ;
                 DIG 10 ;
                 DIG 11 ;
                 DIG 13 ;
                 DIG 17 ;
                 DIG 19 ;
                 DIG 20 ;
                 DIG 21 ;
                 DIG 22 ;
                 DIG 24 ;
                 DIG 25 ;
                 DIG 27 ;
                 DIG 28 ;
                 DIG 30 ;
                 DIG 31 ;
                 DIG 32 ;
                 DIG 33 ;
                 DIG 34 ;
                 DROP 20 ;
                 IF_LEFT
                   { DIG 3 ;
                     DIG 6 ;
                     DIG 7 ;
                     DIG 9 ;
                     DIG 10 ;
                     DIG 11 ;
                     DIG 12 ;
                     DIG 13 ;
                     DIG 14 ;
                     DROP 9 ;
                     IF_LEFT
                       { DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 3 ;
                         IF_LEFT
                           { SWAP ; PAIR ; EXEC }
                           { IF_CONS { SWAP ; DROP ; SOME } { NONE (pair (pair address nat) nat) } ;
                             IF_NONE
                               { SWAP ; DROP ; NIL operation ; PAIR }
                               { CDR ; SWAP ; PAIR ; EXEC } } }
                       { DIG 2 ;
                         DROP ;
                         IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             UNPAIR ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DIG 3 ;
                             SWAP ;
                             DUP 4 ;
                             DROP ;
                             DUP ;
                             GET 21 ;
                             CAR ;
                             UNIT ;
                             LEFT unit ;
                             RIGHT (or (or unit unit) (or unit unit)) ;
                             COMPARE ;
                             EQ ;
                             IF { DIG 4 ; DROP } { DIG 4 ; FAILWITH } ;
                             DUP ;
                             DUP ;
                             DUG 2 ;
                             GET 21 ;
                             PUSH nat 1 ;
                             DIG 3 ;
                             GET 21 ;
                             GET 7 ;
                             DIG 4 ;
                             EDIV ;
                             IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                             CDR ;
                             ADD ;
                             UPDATE 9 ;
                             UPDATE 21 ;
                             DUP ;
                             GET 21 ;
                             UNIT ;
                             RIGHT unit ;
                             RIGHT (or (or unit unit) (or unit unit)) ;
                             UPDATE 1 ;
                             UPDATE 21 ;
                             DUG 2 ;
                             DUP ;
                             GET 7 ;
                             DIG 3 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             NIL operation ;
                             PAIR }
                           { DIG 3 ;
                             DIG 4 ;
                             DROP 2 ;
                             SWAP ;
                             UNIT ;
                             RIGHT unit ;
                             LEFT unit ;
                             DUG 2 ;
                             PAIR ;
                             PAIR ;
                             EXEC ;
                             NIL operation ;
                             PAIR } } }
                   { DIG 2 ;
                     DIG 8 ;
                     DROP 2 ;
                     IF_LEFT
                       { DIG 7 ;
                         DIG 8 ;
                         DIG 10 ;
                         DIG 11 ;
                         DIG 12 ;
                         DROP 5 ;
                         IF_LEFT
                           { DIG 5 ;
                             DIG 7 ;
                             DROP 2 ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             DUP 3 ;
                             PAIR ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP ;
                             GET 17 ;
                             PUSH nat 0 ;
                             COMPARE ;
                             EQ ;
                             IF { DIG 4 ; DROP ; DUG 2 ; PAIR ; PAIR ; EXEC }
                                { DIG 3 ; DROP 2 ; UNIT ; RIGHT (or unit unit) ; DUG 2 ; PAIR ; PAIR ; EXEC } ;
                             NIL operation ;
                             PAIR }
                           { DIG 2 ;
                             DIG 3 ;
                             DROP 2 ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 3 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             DUP 3 ;
                             PAIR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP 3 ;
                             SWAP ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             NIL operation ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 21 ;
                             CAR ;
                             UNIT ;
                             LEFT unit ;
                             LEFT (or unit unit) ;
                             LEFT (or unit unit) ;
                             COMPARE ;
                             EQ ;
                             IF { SWAP ; DIG 2 ; PAIR ; PAIR ; DIG 3 ; SWAP ; EXEC }
                                { DIG 2 ; DIG 5 ; DROP 2 ; SWAP ; PAIR } ;
                             DUP ;
                             CAR ;
                             DIG 3 ;
                             DIG 3 ;
                             DUP ;
                             GET 7 ;
                             DIG 3 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             SWAP ;
                             CDR ;
                             PAIR } }
                       { DIG 2 ;
                         DIG 5 ;
                         DIG 9 ;
                         DROP 3 ;
                         IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             UNPAIR ;
                             DIG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             DUP 3 ;
                             PAIR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DIG 3 ;
                             SWAP ;
                             DUP ;
                             GET 21 ;
                             DIG 2 ;
                             UPDATE 10 ;
                             UPDATE 21 ;
                             DUP ;
                             GET 3 ;
                             GET 7 ;
                             UNIT ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             UNIT ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             NIL operation ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             DUP 4 ;
                             PAIR ;
                             SELF_ADDRESS ;
                             DUP 6 ;
                             PAIR ;
                             PAIR ;
                             DUP 11 ;
                             SWAP ;
                             EXEC ;
                             CONS ;
                             DUP 5 ;
                             GET 3 ;
                             DUP ;
                             GET 8 ;
                             IF_LEFT
                               { DIG 9 ;
                                 DROP 2 ;
                                 DUP ;
                                 GET 3 ;
                                 SWAP ;
                                 CAR ;
                                 DIG 9 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH mutez 0 ;
                                 DIG 2 ;
                                 TRANSFER_TOKENS }
                               { DIG 10 ;
                                 DROP 2 ;
                                 DUP ;
                                 GET 3 ;
                                 SWAP ;
                                 CAR ;
                                 DIG 9 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH mutez 0 ;
                                 SELF_ADDRESS ;
                                 DIG 3 ;
                                 PAIR ;
                                 TRANSFER_TOKENS } ;
                             CONS ;
                             SWAP ;
                             DIG 2 ;
                             PAIR ;
                             SELF_ADDRESS ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             CONS ;
                             SWAP ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP 4 ;
                             DIG 3 ;
                             DUP ;
                             GET 7 ;
                             DIG 3 ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             DIG 2 ;
                             INT ;
                             UPDATE 11 ;
                             SWAP ;
                             CDR ;
                             PAIR }
                           { DIG 3 ;
                             DIG 4 ;
                             DIG 5 ;
                             DIG 6 ;
                             DIG 7 ;
                             DIG 8 ;
                             DIG 9 ;
                             DROP 7 ;
                             SWAP ;
                             UNIT ;
                             LEFT unit ;
                             LEFT unit ;
                             DUG 2 ;
                             PAIR ;
                             PAIR ;
                             EXEC ;
                             NIL operation ;
                             PAIR } } } } }
           { DIG 2 ;
             DIG 4 ;
             DIG 5 ;
             DIG 6 ;
             DIG 7 ;
             DIG 8 ;
             DIG 9 ;
             DIG 10 ;
             DIG 11 ;
             DIG 12 ;
             DIG 13 ;
             DIG 14 ;
             DIG 15 ;
             DIG 16 ;
             DIG 17 ;
             DIG 18 ;
             DIG 19 ;
             DIG 20 ;
             DIG 21 ;
             DIG 22 ;
             DIG 23 ;
             DIG 24 ;
             DIG 25 ;
             DIG 26 ;
             DIG 27 ;
             DIG 28 ;
             DIG 29 ;
             DIG 30 ;
             DIG 31 ;
             DIG 32 ;
             DIG 33 ;
             DIG 34 ;
             DIG 35 ;
             DROP 33 ;
             IF_LEFT
               { UNPAIR ; DIG 2 ; PAIR ; PAIR ; EXEC }
               { PUSH nat 0 ; SWAP ; DIG 2 ; PAIR ; PAIR ; EXEC } } } ;
  view "viewBalance"
       nat
       nat
       { PUSH nat 60 ;
         PUSH nat 10 ;
         MUL ;
         DROP ;
         PUSH nat 86400 ;
         PUSH nat 10 ;
         MUL ;
         DROP ;
         UNPAIR ;
         SWAP ;
         GET 9 ;
         SENDER ;
         DIG 2 ;
         PAIR ;
         GET ;
         IF_NONE { PUSH nat 0 ; NOW ; PUSH nat 0 ; NOW ; PAIR 4 } {} ;
         GET 3 } }


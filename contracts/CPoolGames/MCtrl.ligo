#if !MCTRL_INCLUDED
#define MCTRL_INCLUDED

//RU Модуль управления пулом
module MCtrl is {

    //RU Пул активен
    //RU 
    //RU Периодически разыгрывается вознаграждение для всех участников пула
    const c_STATE_ACTIVE: nat = 0n;
    //RU Пул приостановлен
    //RU 
    //RU Если партия активна, она продолжается, но следующая не будет запущена. Депозиты пользователей останутся без изменений
    const c_STATE_PAUSED: nat = 1n;
    //RU Пул на удаление
    //RU 
    //RU Если партия активна, она продолжается до успешного завершения. По окончании партии (или если она уже завершена) депозиты 
    //RU пользователей будут возвращены и пул будет удален
    const c_STATE_REMOVE: nat = 2n;
    //RU Пул на удаление немедленно
    //RU
    //RU Без учета состояния партии депозиты пользователей будут возвращены немедленно и пул будет удален
    const c_STATE_REMOVENOW: nat = 3n;

    //RU Состояния пула
    const c_STATEs: set(nat) = set [c_STATE_ACTIVE; c_STATE_PAUSED; c_STATE_REMOVE; c_STATE_REMOVENOW];

    //RU Вероятность выигрыша пропорциональна суммарному времени в игре
    //RU
    //RU Время вступления каждого пользователя в розыгрыш фиксируется. В конце партии суммируются все времена пребывания в партии 
    //RU всех пользователей (и эта сумма принимается за вероятность 1.0). Далее случайное число нормируется к этой сумме и выбирается
    //RU пользователь на основании этого числа. В итоге вероятность выигрыша пользователя пропорциональна его времени нахождения в 
    //RU пуле.
    //RU Обнуление депозита удаляет пользователя из партии, соответственно удаляет его время нахождения в пуле, это делает 
    //RU бессмысленным выход и повторный вход в партию.
    //RU Этот алгоритм более интересен пользователям с малыми депозитами, вероятность выигрыша не зависит от размера депозита, поэтому 
    //RU можно вложить мало, а выиграть много.
    const c_ALGO_TIME:    nat = 1n;
    
    //RU Вероятность выигрыша пропорциональна сумме произведений объема на время в игре
    //RU
    //RU Время вступления каждого пользователя в розыгрыш и его депозит на этот момент фиксируется. При пополнении депозита, предыдущий 
    //RU депозит умножается на его время присутствия в пуле в секундах и эта сумма копится отдельно по каждому пользователю. Это позволяет 
    //RU пользователям увеличивать вероятность выигрыша, увеличивая депозит во время партии. В конце партии суммируются все времена 
    //RU пребывания в партии умноженные на депозиты всех пользователей (с учетом пополнений депозита в течение партии, см. выше) (и эта 
    //RU сумма принимается за вероятность 1.0). Далее случайное число нормируется к этой сумме и выбирается пользователь на основании 
    //RU этого числа. В итоге вероятность выигрыша пользователя пропорциональна сумме произведений его депозита и времени нахождения в 
    //RU пуле его ликвидности.
    //RU Обнуление депозита удаляет пользователя из партии, соответственно удаляет его время нахождения в пуле, это делает 
    //RU бессмысленным выход и повторный вход в партию.
    //RU Этот алгоритм более интересен пользователям с большими депозитами, вероятность выигрыша зависит от размера депозита, поэтому можно
    //RU существенно увеличить вероятность выигрыша, вложив большой депозит.
    const c_ALGO_TIMEVOL: nat = 2n;

    //RU Алгоритмы определения победителя
    const c_ALGOs: set(nat) = set [c_ALGO_TIME; c_ALGO_TIMEVOL];

    //RU Параметры для управления пулом
    type t_ctrl is [@layout:comb] record [
        state: nat;//RU< Состояние, см. c_STATE...
        algo: nat;//RU< Алгоритм, см. c_ALGO...
        seconds: nat;//RU< Длительность партии в секундах

        //RU Минимальный депозит для пула
        //RU
        //RU Пул с алгоритмом c_ALGO_TIME не учитывает размер депозита для розыгрыша вознагражедения. Этот параметр позволит избежать
        //RU копеечных депозитов
        minDeposit: nat;

        //RU Максимальный депозит для пула
        //RU
        //RU Пул с алгоритмом c_ALGO_TIMEVOL может позволить владельцу большого депозита войти в последний момент и с большой вероятностью 
        //RU забрать вознаграждения. Чтобы ограничить размеры депозитов в пуле разумными рамками и дать пользователям сопоставимые шансы
        //RU этот параметр вместе с minDeposit позволит получить честный розыгрыш.
        maxDeposit: nat;
    ];

    const c_ERR_UNKNOWN_STATE: string = "MCtrl/UnknownState";//RU< Ошибка: Неизвестное состояние
    const c_ERR_UNKNOWN_ALGO: string = "MCtrl/UnknownAlgo";//RU< Ошибка: Неизвестный алгоритм

    //RU Проверка подаваемых на вход контракта параметров
    [@inline] function check(const ctrl: t_ctrl): unit is block {
        if c_STATEs contains ctrl.state then skip
        else failwith(c_ERR_UNKNOWN_STATE);
        if c_ALGOs contains ctrl.algo then skip
        else failwith(c_ERR_UNKNOWN_ALGO);
    } with unit; 

}
#endif // MCTRL_INCLUDED
